!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALLDICT	pycode/old_generate_namelists.py	/^ALLDICT = {}$/;"	v
ALPHAS	pycode/new_verif_parallel.py	/^ALPHAS = {d:v for d,v in zip(alpha_dbzs[::-1],alpha_vals)}$/;"	v
AreaFill	pycode/_alt_verif_parallel.py	/^from evac.plot.areafill import AreaFill$/;"	i
AreaFill	pycode/_old_verif_parallel.py	/^from evac.plot.areafill import AreaFill$/;"	i
AreaFill	pycode/verif_parallel.py	/^from evac.plot.areafill import AreaFill$/;"	i
BE	pycode/test_verif.py	/^                BE = BirdsEye(ax=ax,fig=fig,proj='merc')$/;"	v
Basemap	pycode/_alt_verif_parallel.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/_old_unsparsify.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/_old_verif_parallel.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/extract_fields.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/new_verif_parallel.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/unsparsify.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
Basemap	pycode/verif_parallel.py	/^from mpl_toolkits.basemap import Basemap$/;"	i
BirdsEye	pycode/_alt_verif_parallel.py	/^from evac.plot.birdseye import BirdsEye$/;"	i
BirdsEye	pycode/_old_verif_parallel.py	/^from evac.plot.birdseye import BirdsEye$/;"	i
BirdsEye	pycode/ensemble_verification.py	/^from evac.plot.birdseye import BirdsEye$/;"	i
BirdsEye	pycode/test_verif.py	/^from evac.plot.birdseye import BirdsEye$/;"	i
BirdsEye	pycode/verif_parallel.py	/^from evac.plot.birdseye import BirdsEye$/;"	i
BoundaryNorm	pycode/unsparsify.py	/^from matplotlib.colors import BoundaryNorm$/;"	i
BoxPlot	pycode/_alt_verif_parallel.py	/^from evac.plot.boxplot import BoxPlot$/;"	i
BoxPlot	pycode/_old_verif_parallel.py	/^from evac.plot.boxplot import BoxPlot$/;"	i
BoxPlot	pycode/verif_parallel.py	/^from evac.plot.boxplot import BoxPlot$/;"	i
CASES	pycode/_alt_verif_parallel.py	/^CASES = collections.OrderedDict()$/;"	v
CASES	pycode/_old_verif_parallel.py	/^CASES = collections.OrderedDict()$/;"	v
CASES	pycode/extract_fields.py	/^CASES = collections.OrderedDict()$/;"	v
CASES	pycode/new_verif_parallel.py	/^CASES = collections.OrderedDict()$/;"	v
CASES	pycode/new_verif_parallel.py	/^CASES = { datetime.datetime(2016,3,31,0,0,0):[datetime.datetime(2016,3,31,22,0,0),], } $/;"	v
CASES	pycode/old_verif.py	/^CASES = collections.OrderedDict()$/;"	v
CASES	pycode/old_verif.py	/^CASES = {$/;"	v
CASES	pycode/run_experiments.py	/^CASES = {$/;"	v
CASES	pycode/verif_parallel.py	/^CASES = collections.OrderedDict()$/;"	v
CAT	pycode/new_verif_parallel.py	/^    CAT = Catalogue(megaframe,tempdir=objectroot,ncpus=ncpus)$/;"	v
COLORS	pycode/new_verif_parallel.py	/^COLORS = {$/;"	v
Casati	pycode/_alt_verif_parallel.py	/^from evac.stats.casati import Casati$/;"	i
Casati	pycode/_old_verif_parallel.py	/^from evac.stats.casati import Casati$/;"	i
Casati	pycode/verif_parallel.py	/^from evac.stats.casati import Casati$/;"	i
CaseGrid	pycode/extract_fields.py	/^class CaseGrid:$/;"	c
Catalogue	pycode/new_verif_parallel.py	/^from evac.object.catalogue import Catalogue$/;"	i
DOMS	pycode/_test_newruns.py	/^DOMS = ($/;"	v
DTYPES	pycode/new_verif_parallel.py	/^    DTYPES = {$/;"	v
Dataset	pycode/_old_unsparsify.py	/^from netCDF4 import Dataset$/;"	i
Dataset	pycode/extract_fields.py	/^from netCDF4 import Dataset$/;"	i
Dataset	pycode/new_verif_parallel.py	/^from netCDF4 import Dataset$/;"	i
DetScores	pycode/_alt_verif_parallel.py	/^from evac.stats.detscores import DetScores$/;"	i
DetScores	pycode/_old_verif_parallel.py	/^from evac.stats.detscores import DetScores$/;"	i
DetScores	pycode/new_verif_parallel.py	/^from evac.stats.detscores import DetScores$/;"	i
DetScores	pycode/old_verif.py	/^from evac.stats.detscores import DetScores$/;"	i
DetScores	pycode/verif_parallel.py	/^from evac.stats.detscores import DetScores$/;"	i
Domains	pycode/new_verif_parallel.py	/^from evac.plot.domains import Domains$/;"	i
E	pycode/_old_verif_parallel.py	/^    E = Ensemble(ensdir,initutc,ndoms=2,ctrl=False,allow_empty=False)$/;"	v
E	pycode/ensemble_verification.py	/^E = Ensemble(dataroot,initutc,ctrl=False,loadobj=False,doms=2)$/;"	v
E	pycode/old_verif.py	/^        E = Ensemble(ensdir,initutc,ndoms=2,ctrl=False)$/;"	v
E	pycode/test_crps.py	/^        E = Ensemble(datadir,initutc,ndoms=2,ctrl=False)$/;"	v
E	pycode/test_kde.py	/^E = Ensemble(rootdir=enspath,initutc=initutc,ndoms=2,ctrl=False,$/;"	v
E	pycode/test_verif.py	/^E = Ensemble(dataroot,initutc,ctrl=False,loadobj=False,doms=2)$/;"	v
EFSS	pycode/_alt_verif_parallel.py	/^from evac.stats.efss import EFSS$/;"	i
EFSS	pycode/_old_verif_parallel.py	/^from evac.stats.efss import EFSS$/;"	i
EFSS	pycode/verif_parallel.py	/^from evac.stats.efss import EFSS$/;"	i
EFSS_Intensity	pycode/_alt_verif_parallel.py	/^from evac.plot.efss_intensity import EFSS_Intensity$/;"	i
EFSS_Intensity	pycode/_old_verif_parallel.py	/^from evac.plot.efss_intensity import EFSS_Intensity$/;"	i
EFSS_Intensity	pycode/verif_parallel.py	/^from evac.plot.efss_intensity import EFSS_Intensity$/;"	i
ESAL	pycode/_alt_verif_parallel.py	/^from evac.stats.esal import ESAL$/;"	i
ESAL	pycode/_old_verif_parallel.py	/^from evac.stats.esal import ESAL$/;"	i
ESAL	pycode/verif_parallel.py	/^from evac.stats.esal import ESAL$/;"	i
Ensemble	pycode/_alt_verif_parallel.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/_old_verif_parallel.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/ensemble_verification.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/old_verif.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/test_crps.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/test_kde.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/test_verif.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
Ensemble	pycode/verif_parallel.py	/^from evac.datafiles.ensemble import Ensemble$/;"	i
FCST_VRBLS	pycode/extract_fields.py	/^FCST_VRBLS = ("Wmax","UH02","UH25","RAINNC","REFL_comp","UP_HELI_MAX")$/;"	v
FI	pycode/_alt_verif_parallel.py	/^from evac.stats.fi import FI$/;"	i
FI	pycode/_old_verif_parallel.py	/^from evac.stats.fi import FI$/;"	i
FI	pycode/verif_parallel.py	/^from evac.stats.fi import FI$/;"	i
FISS	pycode/new_verif_parallel.py	/^from fiss import FISS$/;"	i
FOLDERS	pycode/_test_newruns.py	/^FOLDERS = ($/;"	v
ForecastValue	pycode/_alt_verif_parallel.py	/^from evac.stats.forecastvalue import ForecastValue$/;"	i
ForecastValue	pycode/_old_verif_parallel.py	/^from evac.stats.forecastvalue import ForecastValue$/;"	i
ForecastValue	pycode/verif_parallel.py	/^from evac.stats.forecastvalue import ForecastValue$/;"	i
FourHist	pycode/new_verif_parallel.py	/^        from evac.plot.fourhist import FourHist$/;"	i
G	pycode/figure_caseoutline.py	/^G = GribFile(f)$/;"	v
GribFile	pycode/figure_caseoutline.py	/^from evac.datafiles.gribfile import GribFile$/;"	i
Grid	pycode/_alt_verif_parallel.py	/^from evac.utils.grid import Grid$/;"	i
Grid	pycode/_old_verif_parallel.py	/^from evac.utils.grid import Grid$/;"	i
Grid	pycode/verif_parallel.py	/^from evac.utils.grid import Grid$/;"	i
Histogram	pycode/_alt_verif_parallel.py	/^from evac.plot.histogram import Histogram$/;"	i
Histogram	pycode/_old_verif_parallel.py	/^from evac.plot.histogram import Histogram$/;"	i
Histogram	pycode/verif_parallel.py	/^from evac.plot.histogram import Histogram$/;"	i
KernelDensity	pycode/test_kde.py	/^from sklearn.neighbors.kde import KernelDensity$/;"	i
L	pycode/run_experiments.py	/^        L = LazyEnsemble(**init_kwargs)$/;"	v
LBCdir	pycode/run_experiments.py	/^            LBCdir = wofdir \/ newse_mem$/;"	v
LOOKUP	pycode/new_verif_parallel.py	/^    LOOKUP = {0:0,1:0,2:0,3:0,$/;"	v
LazyEnsemble	pycode/run_experiments.py	/^from evac.lazy.lazyensemble import LazyEnsemble$/;"	i
LineGraph	pycode/_alt_verif_parallel.py	/^from evac.plot.linegraph import LineGraph$/;"	i
LineGraph	pycode/_old_verif_parallel.py	/^from evac.plot.linegraph import LineGraph$/;"	i
LineGraph	pycode/verif_parallel.py	/^from evac.plot.linegraph import LineGraph$/;"	i
M	pycode/_alt_verif_parallel.py	/^import matplotlib as M$/;"	i
M	pycode/_old_verif_parallel.py	/^import matplotlib as M$/;"	i
M	pycode/extract_fields.py	/^import matplotlib as M$/;"	i
M	pycode/new_verif_parallel.py	/^import matplotlib as M$/;"	i
M	pycode/test_kde.py	/^import matplotlib as M$/;"	i
M	pycode/verif_parallel.py	/^import matplotlib as M$/;"	i
MARKERS	pycode/new_verif_parallel.py	/^MARKERS = {$/;"	v
MEMS	pycode/_test_newruns.py	/^MEMS = ['m0{}'.format(n) for n in range(1,5)]$/;"	v
Map	pycode/test_crps.py	/^from evac.plot.map import Map$/;"	i
N	pycode/_alt_verif_parallel.py	/^import numpy as N$/;"	i
N	pycode/_old_unsparsify.py	/^import numpy as N$/;"	i
N	pycode/_old_verif_parallel.py	/^import numpy as N$/;"	i
N	pycode/_test_newruns.py	/^import numpy as N$/;"	i
N	pycode/ensemble_verification.py	/^import numpy as N$/;"	i
N	pycode/extract_fields.py	/^import numpy as N$/;"	i
N	pycode/figure_caseoutline.py	/^import numpy as N$/;"	i
N	pycode/generate_namelists.py	/^import numpy as N$/;"	i
N	pycode/new_verif_parallel.py	/^import numpy as N$/;"	i
N	pycode/old_generate_namelists.py	/^import numpy as N$/;"	i
N	pycode/old_verif.py	/^import numpy as N$/;"	i
N	pycode/run_experiments.py	/^import numpy as N$/;"	i
N	pycode/test_crps.py	/^import numpy as N$/;"	i
N	pycode/test_extraction.py	/^import numpy as N$/;"	i
N	pycode/test_kde.py	/^import numpy as N$/;"	i
N	pycode/test_verif.py	/^import numpy as N$/;"	i
N	pycode/verif_parallel.py	/^import numpy as N$/;"	i
NEWGRID	pycode/_old_verif_parallel.py	/^    NEWGRID = try_load_newgrid(initstr=initstr,E=E)$/;"	v
NICENAMES	pycode/new_verif_parallel.py	/^NICENAMES = {"d01_3km":"EE3km",$/;"	v
NL	pycode/generate_namelists.py	/^NL = {n:{} for n in ensnums}$/;"	v
NL	pycode/old_generate_namelists.py	/^NL = {}$/;"	v
NS	pycode/generate_namelists.py	/^NS = parser.parse_args()$/;"	v
NS	pycode/old_generate_namelists.py	/^NS = parser.parse_args()$/;"	v
OBS	pycode/_old_verif_parallel.py	/^        OBS = ST4$/;"	v
OBS	pycode/old_verif.py	/^OBS = (ST4,RADARS)$/;"	v
OBS_CODES	pycode/new_verif_parallel.py	/^OBS_CODES = {$/;"	v
OBS_VRBLS	pycode/extract_fields.py	/^OBS_VRBLS = ("AWS02","AWS25","DZ","ST4","NEXRAD")$/;"	v
ObjectBased	pycode/_alt_verif_parallel.py	/^from evac.stats.objectbased import ObjectBased$/;"	i
ObjectBased	pycode/_old_verif_parallel.py	/^from evac.stats.objectbased import ObjectBased$/;"	i
ObjectBased	pycode/verif_parallel.py	/^from evac.stats.objectbased import ObjectBased$/;"	i
ObjectID	pycode/new_verif_parallel.py	/^from evac.object.objectid import ObjectID$/;"	i
ObjectID	pycode/test_objectid.py	/^from objectID import ObjectID$/;"	i
ObsGroup	pycode/_alt_verif_parallel.py	/^from evac.datafiles.obsgroup import ObsGroup$/;"	i
ObsGroup	pycode/_old_verif_parallel.py	/^from evac.datafiles.obsgroup import ObsGroup$/;"	i
ObsGroup	pycode/extract_fields.py	/^from evac.datafiles.obsgroup import ObsGroup$/;"	i
ObsGroup	pycode/old_verif.py	/^from evac.datafiles.obsgroup import ObsGroup$/;"	i
ObsGroup	pycode/verif_parallel.py	/^from evac.datafiles.obsgroup import ObsGroup$/;"	i
P	pycode/new_verif_parallel.py	/^    P = utils.load_pickle(fpath=fpath)$/;"	v
PA	pycode/extract_fields.py	/^PA = parser.parse_args()$/;"	v
PA	pycode/new_verif_parallel.py	/^PA = parser.parse_args()$/;"	v
PC_df	pycode/new_verif_parallel.py	/^    PC_df = P['data']$/;"	v
PC_df_sub	pycode/new_verif_parallel.py	/^    PC_df_sub = PC_df.sample(n=250)$/;"	v
PD0	pycode/new_verif_parallel.py	/^    PD0 = Performance(fpath=fpath,legendkwargs=None,legend=False)$/;"	v
PLOTS	pycode/test_extraction.py	/^PLOTS = {$/;"	v
PRES	pycode/run_experiments.py	/^        PRES = {wrfdir\/p:'copy' for p in pres}$/;"	v
PROD	pycode/new_verif_parallel.py	/^PROD = {$/;"	v
PairPlot	pycode/new_verif_parallel.py	/^        from evac.plot.pairplot import PairPlot$/;"	i
Performance	pycode/_alt_verif_parallel.py	/^from evac.plot.performance import Performance$/;"	i
Performance	pycode/_old_verif_parallel.py	/^from evac.plot.performance import Performance$/;"	i
Performance	pycode/new_verif_parallel.py	/^from evac.plot.performance import Performance$/;"	i
Performance	pycode/verif_parallel.py	/^from evac.plot.performance import Performance$/;"	i
Pool	pycode/test_kde.py	/^        from multiprocessing import Pool$/;"	i
PosixPath	pycode/run_experiments.py	/^from pathlib import PosixPath$/;"	i
ProbScores	pycode/_alt_verif_parallel.py	/^from evac.stats.probscores import ProbScores$/;"	i
ProbScores	pycode/_old_verif_parallel.py	/^from evac.stats.probscores import ProbScores$/;"	i
ProbScores	pycode/test_crps.py	/^from evac.stats.probscores import ProbScores$/;"	i
ProbScores	pycode/verif_parallel.py	/^from evac.stats.probscores import ProbScores$/;"	i
R	pycode/test_verif.py	/^            R = R_large$/;"	v
R	pycode/test_verif.py	/^            R = R_small$/;"	v
RADARS	pycode/extract_fields.py	/^    RADARS = ObsGroup(radardir,'radar')$/;"	v
RADARS	pycode/old_verif.py	/^RADARS = ObsGroup(radardir,'radar')$/;"	v
RANCOL	pycode/new_verif_parallel.py	/^RANCOL = {$/;"	v
RESCOLS	pycode/new_verif_parallel.py	/^RESCOLS = {$/;"	v
R_large	pycode/test_verif.py	/^    R_large = Radar(plotutc,radardir)$/;"	v
R_small	pycode/test_verif.py	/^    R_small = copy.copy(R_large)$/;"	v
Radar	pycode/_alt_verif_parallel.py	/^from evac.datafiles.radar import Radar$/;"	i
Radar	pycode/_old_verif_parallel.py	/^from evac.datafiles.radar import Radar$/;"	i
Radar	pycode/ensemble_verification.py	/^from evac.datafiles.radar import Radar$/;"	i
Radar	pycode/test_verif.py	/^from evac.datafiles.radar import Radar$/;"	i
Radar	pycode/verif_parallel.py	/^from evac.datafiles.radar import Radar$/;"	i
S	pycode/_test_newruns.py	/^                    S = Scales(vrbl=vrbl)$/;"	v
S	pycode/ensemble_verification.py	/^S = Scales('REFL_comp')$/;"	v
S	pycode/new_verif_parallel.py	/^                    S = Scales('cref')$/;"	v
S	pycode/test_verif.py	/^S = Scales('REFL_comp')$/;"	v
SALGraph	pycode/_alt_verif_parallel.py	/^from evac.plot.salgraph import SALGraph$/;"	i
SALGraph	pycode/_old_verif_parallel.py	/^from evac.plot.salgraph import SALGraph$/;"	i
SALGraph	pycode/verif_parallel.py	/^from evac.plot.salgraph import SALGraph$/;"	i
SIZES	pycode/new_verif_parallel.py	/^SIZES = {}$/;"	v
SPDICT	pycode/old_generate_namelists.py	/^SPDICT = {}$/;"	v
ST4	pycode/ensemble_verification.py	/^ST4 = StageIV(st4dir)$/;"	v
ST4	pycode/extract_fields.py	/^    ST4 = ObsGroup(st4dir,'stageiv')$/;"	v
ST4	pycode/old_verif.py	/^ST4 = ObsGroup(st4dir,'stageiv')$/;"	v
STOCHS	pycode/old_generate_namelists.py	/^        STOCHS = generate_LHS_draw(seed_lhs,)$/;"	v
Scales	pycode/_alt_verif_parallel.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/_old_verif_parallel.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/_test_newruns.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/ensemble_verification.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/new_verif_parallel.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/test_verif.py	/^from evac.plot.scales import Scales$/;"	i
Scales	pycode/verif_parallel.py	/^from evac.plot.scales import Scales$/;"	i
StageIV	pycode/test_crps.py	/^from evac.datafiles.stageiv import StageIV$/;"	i
ThumbNails	pycode/_alt_verif_parallel.py	/^from evac.plot.thumbnails import ThumbNails$/;"	i
ThumbNails	pycode/_old_verif_parallel.py	/^from evac.plot.thumbnails import ThumbNails$/;"	i
ThumbNails	pycode/verif_parallel.py	/^from evac.plot.thumbnails import ThumbNails$/;"	i
V	pycode/old_verif.py	/^        V = Verif(ensemble=E,obs=OBS,outdir=outdir,$/;"	v
V2	pycode/old_verif.py	/^        V2 = Verif(obs=OBS,outdir=outdir,$/;"	v
VG1	pycode/test_crps.py	/^            VG1 = VerifGrid(W1,nx=nx,ny=ny)$/;"	v
VG2	pycode/test_crps.py	/^            VG2 = VerifGrid(W2,nx=nx,ny=ny)$/;"	v
VRBLS	pycode/_test_newruns.py	/^VRBLS = ($/;"	v
VRBL_CODES	pycode/new_verif_parallel.py	/^VRBL_CODES = {$/;"	v
VRBL_CODES2	pycode/new_verif_parallel.py	/^VRBL_CODES2 = {v:k for k,v in VRBL_CODES.items()}$/;"	v
Verif	pycode/_alt_verif_parallel.py	/^from evac.stats.verif import Verif$/;"	i
Verif	pycode/_old_verif_parallel.py	/^from evac.stats.verif import Verif$/;"	i
Verif	pycode/old_verif.py	/^from evac.stats.verif import Verif$/;"	i
Verif	pycode/verif_parallel.py	/^from evac.stats.verif import Verif$/;"	i
VerifGrid	pycode/test_crps.py	/^from evac.utils.reproject_tools import reproject, WRF_native_grid, create_new_grid, VerifGrid$/;"	i
W	pycode/_test_newruns.py	/^                W = WRFOut(fpath)$/;"	v
W	pycode/test_verif.py	/^        W = E.arbitrary_pick(dom=dom,dataobj=True)$/;"	v
W1	pycode/test_crps.py	/^            W1 = WRF_native_grid(E.arbitrary_pick(give_path=True,dom=1))$/;"	v
W2	pycode/test_crps.py	/^            W2 = WRF_native_grid(E.arbitrary_pick(give_path=True,dom=2))$/;"	v
WRFOut	pycode/_alt_verif_parallel.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRFOut	pycode/_old_verif_parallel.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRFOut	pycode/_test_newruns.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRFOut	pycode/extract_fields.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRFOut	pycode/new_verif_parallel.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRFOut	pycode/verif_parallel.py	/^from evac.datafiles.wrfout import WRFOut$/;"	i
WRF_native_grid	pycode/test_crps.py	/^from evac.utils.reproject_tools import reproject, WRF_native_grid, create_new_grid, VerifGrid$/;"	i
YYY	pycode/new_verif_parallel.py	/^    YYY = {}$/;"	v
ZZZ	pycode/new_verif_parallel.py	/^    ZZZ = {}$/;"	v
__get_cut_radar	pycode/verif_parallel.py	/^def __get_cut_radar(utc,E,return_grid=False):$/;"	f	file:
__get_fcst_extraction_fpaths	pycode/extract_fields.py	/^def __get_fcst_extraction_fpaths(initstr,mem,vrbl,fmt,nt=37):$/;"	f	file:
__get_mrms_extraction_fpath	pycode/extract_fields.py	/^def __get_mrms_extraction_fpath(initstr,validutc,vrbl,fmt):$/;"	f	file:
__init__	pycode/extract_fields.py	/^    def __init__(self,Wnc):$/;"	m	class:CaseGrid
_fms	pycode/new_verif_parallel.py	/^    _fms = (30,60,90,120,150,180)$/;"	v
_load_data	pycode/extract_fields.py	/^def _load_data(nc_fpath,vrbl,npyfpaths):$/;"	f
_save	pycode/extract_fields.py	/^def _save(arr,file):$/;"	f
_ths	pycode/new_verif_parallel.py	/^    _ths = (15,30,40,50)$/;"	v
_unsparsify	pycode/extract_fields.py	/^def _unsparsify(mrms_nc,vrbl,d01_nc=False):$/;"	f
_vs	pycode/new_verif_parallel.py	/^    _vs = ("REFL_comp",)$/;"	v
all_cmd	pycode/extract_fields.py	/^all_cmd = []$/;"	v
all_fcstmins	pycode/_old_verif_parallel.py	/^        all_fcstmins = (60,120,180)$/;"	v
all_fcstmins	pycode/_old_verif_parallel.py	/^        all_fcstmins = [int(t.seconds\/60) for t in all_fcstmins_dt]$/;"	v
all_fcstmins	pycode/new_verif_parallel.py	/^all_fcstmins = N.arange(5,185,5)$/;"	v
all_fcstmins_dt	pycode/_old_verif_parallel.py	/^        all_fcstmins_dt = [v-E.initutc for v in E.validtimes]$/;"	v
all_features	pycode/new_verif_parallel.py	/^    all_features = ['area','eccentricity','extent','max_intensity',$/;"	v
all_fmts	pycode/new_verif_parallel.py	/^    all_fmts = list(fcst_fmts) + list(obs_fmts)$/;"	v
allow_empty	pycode/test_kde.py	/^                allow_empty=False)$/;"	v
alpha	pycode/new_verif_parallel.py	/^alpha = 0.7$/;"	v
alpha_dbzs	pycode/new_verif_parallel.py	/^alpha_dbzs = N.arange(10,65,5)$/;"	v
alpha_vals	pycode/new_verif_parallel.py	/^alpha_vals = N.linspace(0.1,1.0,num=len(alpha_dbzs))$/;"	v
argparse	pycode/_alt_verif_parallel.py	/^import argparse$/;"	i
argparse	pycode/_old_verif_parallel.py	/^import argparse$/;"	i
argparse	pycode/extract_fields.py	/^import argparse$/;"	i
argparse	pycode/generate_namelists.py	/^import argparse$/;"	i
argparse	pycode/new_verif_parallel.py	/^import argparse$/;"	i
argparse	pycode/old_generate_namelists.py	/^import argparse$/;"	i
argparse	pycode/verif_parallel.py	/^import argparse$/;"	i
attrs	pycode/new_verif_parallel.py	/^    attrs = ("max_updraught",)$/;"	v
ax	pycode/_test_newruns.py	/^                ax = next(axit)$/;"	v
ax	pycode/new_verif_parallel.py	/^    ax = next(axit)$/;"	v
ax	pycode/test_kde.py	/^        ax = axes.flat[0]$/;"	v
ax	pycode/test_kde.py	/^        ax = axes.flat[1]$/;"	v
ax	pycode/test_kde.py	/^    ax = axes.flat[0]$/;"	v
ax	pycode/test_kde.py	/^    ax = axes.flat[1]$/;"	v
ax0	pycode/test_kde.py	/^    ax0 = sns.kdeplot(fcst1D,cut=0,cumulative=False,bw=bw)$/;"	v
ax1	pycode/test_kde.py	/^    ax1 = sns.kdeplot(fcst1D,cumulative=True,bw=bw)$/;"	v
ax2	pycode/test_kde.py	/^    ax2 = sns.kdeplot(fcst1D,clip=(0,N.inf),bw=bw)$/;"	v
ax3	pycode/test_kde.py	/^    ax3 = sns.kdeplot(fcst1Da,cut=0,bw=bw)$/;"	v
ax_gen	pycode/new_verif_parallel.py	/^        def ax_gen(axes):$/;"	f	function:.compute_obj_obs
axit	pycode/_test_newruns.py	/^        axit = iter(axes.flatten())$/;"	v
axit	pycode/new_verif_parallel.py	/^    axit = axes.flat$/;"	v
basic_tests	pycode/_old_verif_parallel.py	/^basic_tests = parser.parse_args().tests$/;"	v
basic_tests	pycode/verif_parallel.py	/^basic_tests = parser.parse_args().tests$/;"	v
bl_mems	pycode/generate_namelists.py	/^    bl_mems = sorted(x+(6*n) for x in [1,2] for n in range(int(600\/6)))$/;"	v
bl_mems	pycode/old_generate_namelists.py	/^        bl_mems = [x+(6*n) for x in [1,2] for n in range(5)]$/;"	v
bl_pbl_physics	pycode/generate_namelists.py	/^bl_pbl_physics = None $/;"	v
bl_pbl_physics	pycode/old_generate_namelists.py	/^bl_pbl_physics = None $/;"	v
bmap	pycode/new_verif_parallel.py	/^                    bmap = create_bmap(urcrnrlat=lats.max(),urcrnrlon=lons.max(),$/;"	v
bw	pycode/test_kde.py	/^                bw = get_bw(fcst1D)$/;"	v
bw	pycode/test_kde.py	/^            bw = get_bw(fcst1D,factor=bwfc)$/;"	v
bw	pycode/test_kde.py	/^    bw = get_bw(fcst1D)$/;"	v
casati_cut	pycode/verif_parallel.py	/^def casati_cut(arr,nsq):$/;"	f
casedt	pycode/generate_namelists.py	/^casedt = datetime.datetime.strptime(casestr,"%Y%m%d")$/;"	v
casehour	pycode/generate_namelists.py	/^casehour = 0$/;"	v
casestr	pycode/extract_fields.py	/^    casestr = utils.string_from_time('dir',caseutc,strlen='day')$/;"	v
casestr	pycode/generate_namelists.py	/^casestr = str(NS.casestr)$/;"	v
casestr	pycode/new_verif_parallel.py	/^            casestr = utils.string_from_time('dir',caseutc,strlen='day')$/;"	v
casestr	pycode/old_verif.py	/^    casestr = utils.string_from_time('dir',caseutc,strlen='day')$/;"	v
casestr	pycode/run_experiments.py	/^        casestr = utils.string_from_time('dir',caseutc,strlen='day')$/;"	v
caseutc	pycode/extract_fields.py	/^                                            caseutc=caseutc)$/;"	v
caseutc	pycode/extract_fields.py	/^                                            caseutc=caseutc,)$/;"	v
caseutc	pycode/extract_fields.py	/^                                        caseutc=caseutc)$/;"	v
caseutc	pycode/extract_fields.py	/^                                        caseutc=caseutc,)$/;"	v
caseutc	pycode/extract_fields.py	/^                                    caseutc=caseutc,)$/;"	v
cbar_ax	pycode/test_kde.py	/^        cbar_ax = fig.add_axes([0.15,0.087,0.7,0.025])$/;"	v
cbar_ax	pycode/test_kde.py	/^    cbar_ax = fig.add_axes([0.15,0.087,0.7,0.025])$/;"	v
cf	pycode/new_verif_parallel.py	/^                        cf = bmap.contourf(x,y,fcst_data,**kw)$/;"	v
cf	pycode/new_verif_parallel.py	/^                        cf = bmap.contourf(x,y,obs_data,**kw)$/;"	v
cf	pycode/test_kde.py	/^        cf = ax.contourf(xx,yy,fcst_pp,cmap=M.cm.jet,levels=levels)$/;"	v
cf	pycode/test_kde.py	/^        cf = ax.contourf(xx,yy,rawpc,cmap=M.cm.jet,levels=levels)$/;"	v
cf	pycode/test_kde.py	/^    cf = ax.contourf(xx,yy,fcst_pp,cmap=M.cm.jet,levels=levels)$/;"	v
cf	pycode/test_kde.py	/^    cf = ax.contourf(xx,yy,rawpc,cmap=M.cm.jet,levels=levels)$/;"	v
check_before	pycode/run_experiments.py	/^check_before = False$/;"	v
check_in_serial	pycode/extract_fields.py	/^check_in_serial = PA.check_in_serial$/;"	v
check_only	pycode/_old_verif_parallel.py	/^check_only = parser.parse_args().check_only$/;"	v
check_only	pycode/verif_parallel.py	/^check_only = parser.parse_args().check_only$/;"	v
closest	pycode/extract_fields.py	/^def closest(arr,val,return_val=False):$/;"	f
cmap	pycode/_test_newruns.py	/^                    cmap = 'gist_earth_r'$/;"	v
cmap	pycode/_test_newruns.py	/^                    cmap = S.cm$/;"	v
cmd	pycode/run_experiments.py	/^            cmd = ("python generate_namelists.py --donotenforce --nmems {}"$/;"	v
collections	pycode/_alt_verif_parallel.py	/^import collections$/;"	i
collections	pycode/_old_verif_parallel.py	/^import collections$/;"	i
collections	pycode/extract_fields.py	/^import collections$/;"	i
collections	pycode/new_verif_parallel.py	/^import collections$/;"	i
collections	pycode/old_verif.py	/^import collections$/;"	i
collections	pycode/verif_parallel.py	/^import collections$/;"	i
commands	pycode/extract_fields.py	/^commands = []$/;"	v
compute_brier	pycode/verif_parallel.py	/^compute_brier = 0$/;"	v
compute_casati	pycode/verif_parallel.py	/^compute_casati = 0$/;"	v
compute_crps	pycode/old_verif.py	/^compute_crps = 0$/;"	v
compute_crps	pycode/verif_parallel.py	/^compute_crps = 0$/;"	v
compute_detscores	pycode/old_verif.py	/^compute_detscores = 0$/;"	v
compute_detscores	pycode/verif_parallel.py	/^compute_detscores = 0$/;"	v
compute_efss	pycode/new_verif_parallel.py	/^    def compute_efss(i,threshs,spatial_windows,temporal_window):$/;"	f
compute_fi	pycode/verif_parallel.py	/^compute_fi = 0$/;"	v
compute_fss	pycode/verif_parallel.py	/^compute_fss = 0$/;"	v
compute_fv	pycode/verif_parallel.py	/^compute_fv = 0$/;"	v
compute_obj	pycode/_alt_verif_parallel.py	/^compute_obj = False$/;"	v
compute_obj	pycode/old_verif.py	/^compute_obj = 0$/;"	v
compute_obj	pycode/verif_parallel.py	/^compute_obj = 1$/;"	v
compute_obj_fcst	pycode/new_verif_parallel.py	/^    def compute_obj_fcst(i):$/;"	f
compute_obj_obs	pycode/new_verif_parallel.py	/^    def compute_obj_obs(i):$/;"	f
compute_perf	pycode/new_verif_parallel.py	/^    def compute_perf(i):$/;"	f
concat_W_df	pycode/new_verif_parallel.py	/^def concat_W_df(df_og,W_df):$/;"	f
config	pycode/run_experiments.py	/^        config = 'default'$/;"	v
copy	pycode/ensemble_verification.py	/^import copy$/;"	i
copy	pycode/new_verif_parallel.py	/^import copy$/;"	i
copy	pycode/test_crps.py	/^import copy$/;"	i
copy	pycode/test_verif.py	/^import copy$/;"	i
copy	pycode/verif_parallel.py	/^        import copy$/;"	i
copy_cmd	pycode/generate_namelists.py	/^    copy_cmd = 'cp {0} {1}'.format(paths_to_nl[n]['old'],paths_to_nl[n]['new'])$/;"	v
copy_cmd	pycode/old_generate_namelists.py	/^    copy_cmd = 'cp {0} {1}'.format(paths_to_nl[n]['old'],paths_to_nl[n]['new'])$/;"	v
cpus	pycode/run_experiments.py	/^                            cpus=24,$/;"	v
create_W_lookup	pycode/new_verif_parallel.py	/^def create_W_lookup(fcst_fmts):$/;"	f
create_bmap	pycode/_old_unsparsify.py	/^def create_bmap():$/;"	f
create_bmap	pycode/extract_fields.py	/^def create_bmap():$/;"	f
create_bmap	pycode/new_verif_parallel.py	/^def create_bmap(urcrnrlat,urcrnrlon,llcrnrlat,llcrnrlon,ax=None,$/;"	f
create_ens_df	pycode/new_verif_parallel.py	/^def create_ens_df(megaframe):$/;"	f
create_neutral_bmap	pycode/extract_fields.py	/^    def create_neutral_bmap(self,$/;"	m	class:CaseGrid
create_new_grid	pycode/test_crps.py	/^from evac.utils.reproject_tools import reproject, WRF_native_grid, create_new_grid, VerifGrid$/;"	i
create_newgrid	pycode/test_crps.py	/^def create_newgrid(DF):$/;"	f
crpsfpath	pycode/test_crps.py	/^crpsfpath = os.path.join(outdir,'crps_data.txt')$/;"	v
cu_physics	pycode/old_generate_namelists.py	/^cu_physics = None$/;"	v
d01	pycode/generate_namelists.py	/^        d01 = 221$/;"	v
d01	pycode/generate_namelists.py	/^        d01 = 250$/;"	v
d01	pycode/generate_namelists.py	/^        d01 = 251$/;"	v
d01_fname	pycode/extract_fields.py	/^        d01_fname = get_wrfout_fname(initutc,1)$/;"	v
d01_fpath	pycode/extract_fields.py	/^        d01_fpath = os.path.join(m01dir,d01_fname)$/;"	v
d01_lats	pycode/extract_fields.py	/^        d01_lats = N.load(d01_latf)$/;"	v
d01_lats	pycode/extract_fields.py	/^        d01_lats = d01_nc.variables['XLAT'][0,:,:]$/;"	v
d01_limdict	pycode/ensemble_verification.py	/^d01_limdict = E.get_limits(dom=1)$/;"	v
d01_limdict	pycode/test_verif.py	/^d01_limdict = E.get_limits(dom=1)$/;"	v
d01_lons	pycode/extract_fields.py	/^        d01_lons = N.load(d01_lonf)$/;"	v
d01_lons	pycode/extract_fields.py	/^        d01_lons = d01_nc.variables['XLONG'][0,:,:]$/;"	v
d01_nc	pycode/extract_fields.py	/^        d01_nc = Dataset(d01_fpath)$/;"	v
d02	pycode/generate_namelists.py	/^        d02 = 322$/;"	v
d02_GRID	pycode/extract_fields.py	/^        d02_GRID = CaseGrid(d02_nc)$/;"	v
d02_fname	pycode/extract_fields.py	/^        d02_fname = get_wrfout_fname(initutc,2)$/;"	v
d02_fpath	pycode/extract_fields.py	/^        d02_fpath = os.path.join(m01dir,d02_fname)$/;"	v
d02_lats	pycode/extract_fields.py	/^        d02_lats = N.load(d02_latf)$/;"	v
d02_lats	pycode/extract_fields.py	/^        d02_lats = d02_nc.variables['XLAT'][0,:,:]$/;"	v
d02_limdict	pycode/ensemble_verification.py	/^d02_limdict = E.get_limits(dom=2)$/;"	v
d02_limdict	pycode/test_verif.py	/^d02_limdict = E.get_limits(dom=2)$/;"	v
d02_lons	pycode/extract_fields.py	/^        d02_lons = N.load(d02_lonf)$/;"	v
d02_lons	pycode/extract_fields.py	/^        d02_lons = d02_nc.variables['XLONG'][0,:,:]$/;"	v
d02_nc	pycode/extract_fields.py	/^        d02_nc = Dataset(d02_fpath)$/;"	v
data	pycode/_test_newruns.py	/^                data = W.get(vrbl=vrbl,utc=utc)[0,lvidx,:,:]$/;"	v
data	pycode/test_verif.py	/^                data = E.get('REFL_comp',utc=plotutc,dom=dom,members=memname)[0,0,0,:,:]$/;"	v
datadir	pycode/test_crps.py	/^        datadir = os.path.join(dataroot,initdir)$/;"	v
dataroot	pycode/ensemble_verification.py	/^dataroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/20160331'$/;"	v
dataroot	pycode/test_crps.py	/^dataroot = '\/scratch\/john.lawson\/WRF\/VSE_reso'$/;"	v
dataroot	pycode/test_verif.py	/^dataroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/test\/test_datadir'$/;"	v
datestr	pycode/test_objectid.py	/^        datestr = '20170504',$/;"	v
datetime	pycode/_alt_verif_parallel.py	/^import datetime$/;"	i
datetime	pycode/_old_verif_parallel.py	/^import datetime$/;"	i
datetime	pycode/_test_newruns.py	/^import datetime$/;"	i
datetime	pycode/ensemble_verification.py	/^import datetime$/;"	i
datetime	pycode/extract_fields.py	/^import datetime$/;"	i
datetime	pycode/generate_namelists.py	/^import datetime$/;"	i
datetime	pycode/new_verif_parallel.py	/^import datetime$/;"	i
datetime	pycode/old_verif.py	/^import datetime$/;"	i
datetime	pycode/run_experiments.py	/^import datetime$/;"	i
datetime	pycode/test_crps.py	/^import datetime$/;"	i
datetime	pycode/test_kde.py	/^import datetime$/;"	i
datetime	pycode/test_verif.py	/^import datetime$/;"	i
datetime	pycode/verif_parallel.py	/^import datetime$/;"	i
debug	pycode/generate_namelists.py	/^debug = False # Print more output$/;"	v
debug	pycode/old_generate_namelists.py	/^debug = False # Print more output$/;"	v
debug_mode	pycode/extract_fields.py	/^debug_mode = False$/;"	v
denormalise	pycode/old_generate_namelists.py	/^def denormalise(normvals,xmin,xmax):$/;"	f
diff_df	pycode/new_verif_parallel.py	/^    diff_df = diff_df[(diff_df['d01_id'] != 0.0)]$/;"	v
diff_df	pycode/new_verif_parallel.py	/^    diff_df = utils.do_new_df(DTYPES,len(matches))$/;"	v
do_1d	pycode/test_kde.py	/^    do_1d = 0$/;"	v
do_2d	pycode/test_kde.py	/^    do_2d = 1$/;"	v
do_5km	pycode/extract_fields.py	/^    do_5km = False$/;"	v
do_all	pycode/test_objectid.py	/^        do_all = False,$/;"	v
do_domains	pycode/new_verif_parallel.py	/^do_domains = False$/;"	v
do_efss	pycode/new_verif_parallel.py	/^do_efss = False # Also includes FISS, which is broken?$/;"	v
do_fcst_interp	pycode/verif_parallel.py	/^def do_fcst_interp(nc_fpath,vrbl,npyfpaths,newlats,newlons):$/;"	f
do_interp	pycode/_alt_verif_parallel.py	/^def do_interp(fmt,old_field,old_lats,old_lons,new_lats,new_lons):$/;"	f
do_kde	pycode/verif_parallel.py	/^def do_kde(arr3d):$/;"	f
do_mrms	pycode/extract_fields.py	/^    do_mrms = True if ("mrms" in vrbl) else False$/;"	v
do_mrms_interp	pycode/verif_parallel.py	/^def do_mrms_interp(nc_fpath,npy_fpath,newlats,newlons,vrbl):$/;"	f
do_nexrad	pycode/extract_fields.py	/^    do_nexrad = True if vrbl is "NEXRAD" else False$/;"	v
do_object_cluster	pycode/new_verif_parallel.py	/^do_object_cluster = False$/;"	v
do_object_distr	pycode/new_verif_parallel.py	/^do_object_distr = False$/;"	v
do_object_examples	pycode/new_verif_parallel.py	/^do_object_examples = False$/;"	v
do_object_matching	pycode/new_verif_parallel.py	/^do_object_matching = False$/;"	v
do_object_pca	pycode/new_verif_parallel.py	/^do_object_pca = False$/;"	v
do_object_performance	pycode/new_verif_parallel.py	/^do_object_performance = False$/;"	v
do_object_waffle	pycode/new_verif_parallel.py	/^do_object_waffle = False$/;"	v
do_pca_plots	pycode/new_verif_parallel.py	/^def do_pca_plots(pca,PC_df,features,fmt):$/;"	f
do_percentiles	pycode/new_verif_parallel.py	/^do_percentiles = False$/;"	v
do_performance	pycode/new_verif_parallel.py	/^do_performance = False$/;"	v
do_plot_test	pycode/new_verif_parallel.py	/^do_plot_test = True$/;"	v
do_quicklooks	pycode/new_verif_parallel.py	/^do_quicklooks = not PA.no_quick$/;"	v
do_unsparsify	pycode/_old_unsparsify.py	/^def do_unsparsify(mrms_nc,vrbl,d01_nc):$/;"	f
do_write_diff	pycode/new_verif_parallel.py	/^    def do_write_diff(df,n,oldkey,newkey,d02,d01):$/;"	f
dom_names	pycode/extract_fields.py	/^dom_names = ("d01","d02")$/;"	v
dom_names	pycode/new_verif_parallel.py	/^dom_names = ("d01","d02")$/;"	v
dom_names	pycode/verif_parallel.py	/^dom_names = ("d01","d02")$/;"	v
domnos	pycode/new_verif_parallel.py	/^domnos = (1,2)$/;"	v
doms	pycode/generate_namelists.py	/^doms = 2 # number of domains$/;"	v
doms	pycode/old_generate_namelists.py	/^doms = 2 # number of domains$/;"	v
doms	pycode/test_objectid.py	/^        doms = (2,),$/;"	v
dryrun	pycode/run_experiments.py	/^            dryrun = False,$/;"	v
dx_to_nxny	pycode/extract_fields.py	/^    def dx_to_nxny(self,dx,urcrnrlat,urcrnrlon,llcrnrlat,llcrnrlon):$/;"	m	class:CaseGrid
edit_namelist	pycode/generate_namelists.py	/^def edit_namelist(f,sett,newval,enforce_all=False,doms=1,precision=3):$/;"	f
edit_namelist	pycode/old_generate_namelists.py	/^def edit_namelist(f,sett,newval,enforce_all=False,doms=1,precision=3):$/;"	f
efss	pycode/_old_verif_parallel.py	/^    efss = EFSS(fcst4d=fcst4d,obs3d=xa_all,threshs=threshs,ncpus=40,$/;"	v
enddt	pycode/generate_namelists.py	/^enddt = initdt + datetime.timedelta(seconds=int(60*60*runlen))$/;"	v
enforce_all	pycode/generate_namelists.py	/^enforce_all = NS.donotenforce $/;"	v
enforce_all	pycode/old_generate_namelists.py	/^enforce_all = NS.donotenforce $/;"	v
ensdir	pycode/old_verif.py	/^        ensdir = os.path.join(ensroot,initdir)$/;"	v
ensnums	pycode/generate_namelists.py	/^ensnums = range(1,nens+1) # names of each ensemble$/;"	v
ensnums	pycode/old_generate_namelists.py	/^ensnums = range(1,nens+1) # names of each ensemble$/;"	v
enspath	pycode/test_kde.py	/^enspath = os.path.join(ensroot,initstr)$/;"	v
ensroot	pycode/_alt_verif_parallel.py	/^ensroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/{}'.format(key_wrf)$/;"	v
ensroot	pycode/_old_verif_parallel.py	/^ensroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/{}'.format(key_wrf)$/;"	v
ensroot	pycode/extract_fields.py	/^ensroot = '\/oldscratch\/john.lawson\/WRF\/VSE_reso\/{}'.format(key_wrf)$/;"	v
ensroot	pycode/old_verif.py	/^ensroot = '\/scratch\/john.lawson\/WRF\/VSE_reso'$/;"	v
ensroot	pycode/test_kde.py	/^ensroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/ensembledata'$/;"	v
ensroot	pycode/verif_parallel.py	/^ensroot = '\/scratch\/john.lawson\/WRF\/VSE_reso\/{}'.format(key_wrf)$/;"	v
evac	pycode/_alt_verif_parallel.py	/^import evac.utils as utils$/;"	i
evac	pycode/_old_verif_parallel.py	/^import evac.utils as utils$/;"	i
evac	pycode/_test_newruns.py	/^import evac.utils.utils as utils$/;"	i
evac	pycode/ensemble_verification.py	/^import evac.utils as utils$/;"	i
evac	pycode/extract_fields.py	/^import evac.utils as utils$/;"	i
evac	pycode/figure_caseoutline.py	/^import evac.utils as utils$/;"	i
evac	pycode/new_verif_parallel.py	/^import evac.utils as utils$/;"	i
evac	pycode/old_verif.py	/^import evac.utils as utils$/;"	i
evac	pycode/run_experiments.py	/^import evac.utils.utils as utils$/;"	i
evac	pycode/test_crps.py	/^import evac.utils as utils$/;"	i
evac	pycode/test_kde.py	/^import evac.utils.utils as utils$/;"	i
evac	pycode/test_verif.py	/^import evac.utils as utils$/;"	i
evac	pycode/verif_parallel.py	/^import evac.utils as utils$/;"	i
experiment	pycode/old_generate_namelists.py	/^        experiment = "MP"$/;"	v
experiment	pycode/old_generate_namelists.py	/^        experiment = "MP-Stoch"$/;"	v
experiment	pycode/old_generate_namelists.py	/^        experiment = "SP"$/;"	v
experiment	pycode/old_generate_namelists.py	/^        experiment = "SP-Stoch"$/;"	v
experiments	pycode/old_generate_namelists.py	/^experiments = NL.keys()$/;"	v
extract_fields	pycode/verif_parallel.py	/^def extract_fields():$/;"	f
extractroot	pycode/new_verif_parallel.py	/^extractroot = '\/Users\/john.lawson\/data\/{}'.format(key_pp)$/;"	v
f1	pycode/test_extraction.py	/^f1 = 'REFL_comp_d01_3km_20160331_2200_2215_m01.npy'$/;"	v
f3	pycode/test_extraction.py	/^f3 = 'REFL_comp_d02_1km_20160331_2200_2215_m01.npy'$/;"	v
f4	pycode/test_extraction.py	/^f4 = 'REFL_comp_d02_3km_20160331_2200_2215_m01.npy'$/;"	v
f6	pycode/test_extraction.py	/^f6 = 'NEXRAD_nexrad_1km_20160331_2215.npy'$/;"	v
f7	pycode/test_extraction.py	/^f7 = 'NEXRAD_nexrad_3km_20160331_2215.npy'$/;"	v
fc2ob	pycode/new_verif_parallel.py	/^def fc2ob(fcst_vrbl,fcst_fmt):$/;"	f
fcst	pycode/test_kde.py	/^        fcst = fcst_all[:,0,0,:,:]$/;"	v
fcst	pycode/test_kde.py	/^    fcst = fcst_all[:,0,0,:,:]$/;"	v
fcst	pycode/test_kde.py	/^fcst = N.swapaxes(fcst,1,0)$/;"	v
fcst	pycode/test_kde.py	/^fcst = fcst_all[:,0,0,:,:].reshape(nmems,nflat)$/;"	v
fcst1D	pycode/test_kde.py	/^            fcst1D = fcst[:,i,j]$/;"	v
fcst1D	pycode/test_kde.py	/^    fcst1D = fcst[3556,:]$/;"	v
fcst1Da	pycode/test_kde.py	/^    fcst1Da = N.hstack((fcst1D,N.array([0.0,0.0,0.0])))$/;"	v
fcst4d	pycode/_old_verif_parallel.py	/^    fcst4d = N.swapaxes(xfs_all,0,1)$/;"	v
fcst_all	pycode/test_kde.py	/^    fcst_all = fcst_all - 273.15$/;"	v
fcst_all	pycode/test_kde.py	/^fcst_all = E.get(fcsthr=fhr,vrbl=vrbl,dom=1)$/;"	v
fcst_dfs	pycode/new_verif_parallel.py	/^    fcst_dfs = []$/;"	v
fcst_fmts	pycode/new_verif_parallel.py	/^    fcst_fmts = ("d01_3km","d02_1km")$/;"	v
fcst_fmts	pycode/new_verif_parallel.py	/^    fcst_fmts = ("d01_3km","d02_1km",)#"d02_3km")$/;"	v
fcst_fmts	pycode/new_verif_parallel.py	/^fcst_fmts =  ("d01_3km","d02_1km")$/;"	v
fcst_grid	pycode/_old_verif_parallel.py	/^    fcst_grid = NEWGRID$/;"	v
fcst_nt	pycode/test_objectid.py	/^        fcst_nt = int(180\/5) + 1,$/;"	v
fcst_pp	pycode/test_kde.py	/^        fcst_pp = N.empty([nlat,nlon])$/;"	v
fcst_pp	pycode/test_kde.py	/^    fcst_pp = N.empty([nlat,nlon])$/;"	v
fcst_vrbl	pycode/new_verif_parallel.py	/^                    fcst_vrbl = "UH25" if nax in (0,1) else "REFL_comp" $/;"	v
fcst_vrbl	pycode/new_verif_parallel.py	/^    fcst_vrbl = "REFL_comp"$/;"	v
fcst_vrbl	pycode/new_verif_parallel.py	/^    fcst_vrbl = "UH25"$/;"	v
fcst_vrbls	pycode/extract_fields.py	/^fcst_vrbls = ("UH25",)$/;"	v
fcst_vrbls	pycode/new_verif_parallel.py	/^fcst_vrbls = ("Wmax","UH02","UH25","accum_precip","REFL_comp")$/;"	v
fcstmins	pycode/_alt_verif_parallel.py	/^fcstmins = N.arange(0,185,5)$/;"	v
fcstmins	pycode/_test_newruns.py	/^fcstmins = range(30,210,30)$/;"	v
fcstmins	pycode/new_verif_parallel.py	/^    fcstmins = (30,90,150)$/;"	v
fcstmins	pycode/new_verif_parallel.py	/^    fcstmins = all_fcstmins$/;"	v
fcstmins	pycode/verif_parallel.py	/^fcstmins = N.arange(0,185,5)$/;"	v
fctimes	pycode/old_verif.py	/^fctimes = list(range(1,4))$/;"	v
fdir	pycode/new_verif_parallel.py	/^                fdir = dname + "_raw"$/;"	v
fdir_efss	pycode/_old_verif_parallel.py	/^    fdir_efss = npydir$/;"	v
features	pycode/new_verif_parallel.py	/^    features = P['features']$/;"	v
fhr	pycode/test_kde.py	/^fhr = 1$/;"	v
fhrs	pycode/ensemble_verification.py	/^fhrs = [0.25,] + list(range(1,3))$/;"	v
fhrs	pycode/test_verif.py	/^fhrs = [0.25,] + list(range(1,3))$/;"	v
fhstr	pycode/test_verif.py	/^        fhstr = utils.pretty_fhr(fhr)$/;"	v
find_row	pycode/new_verif_parallel.py	/^    def find_row(df,megaidx):$/;"	f
fname	pycode/_test_newruns.py	/^                fname = 'wrfout_{}_2017-05-03_02:00:00'.format(dom)$/;"	v
fname	pycode/_test_newruns.py	/^        fname = "NCOruns_{:03d}min_{}_{}.png".format(fcstmin,vrbl,dom)$/;"	v
fname	pycode/new_verif_parallel.py	/^                fname = "test_UH_AWS_{:03d}min_{}.png".format(int(fm),kmstr)$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "domains.png"$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "examples_from_pca.png"$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "hist_3x3.png"$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "object-matches_d01-d02.pickle"$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "pca_all_fcst_objs.pickle"$/;"	v
fname	pycode/new_verif_parallel.py	/^    fname = "perfdiag_REFL_comp_30_multi.png"$/;"	v
fname	pycode/test_kde.py	/^                fname = 'test_kde_sm_{}_bwfc{}.png'.format(plottype,bwfc)$/;"	v
fname	pycode/test_kde.py	/^        fname = 'test_kde2d_sm.png'$/;"	v
fname	pycode/test_kde.py	/^    fname = 'test_kde2d_scipy.png'$/;"	v
fname	pycode/test_kde.py	/^    fname = 'test_kde_scipy.png'$/;"	v
fname	pycode/test_verif.py	/^        fname = "test_verif_d{:02d}_{}_{}".format(dom,opt,fhstr)$/;"	v
fname0	pycode/test_kde.py	/^    fname0 = 'test_kde_seaborn0.png'$/;"	v
fname1	pycode/test_kde.py	/^    fname1 = 'test_kde_seaborn1.png'$/;"	v
fname2	pycode/test_kde.py	/^    fname2 = 'test_kde_seaborn2.png'$/;"	v
fname3	pycode/test_kde.py	/^    fname3 = 'test_kde_seaborn3.png'$/;"	v
fpath	pycode/_old_verif_parallel.py	/^    fpath = generate_fname(vrbl=vrbl,metric='eFSS',$/;"	v
fpath	pycode/_test_newruns.py	/^                fpath = os.path.join(folder,mem,fname)$/;"	v
fpath	pycode/_test_newruns.py	/^        fpath = os.path.join(outdir,fname)$/;"	v
fpath	pycode/new_verif_parallel.py	/^                fpath = os.path.join(outroot,fname)$/;"	v
fpath	pycode/new_verif_parallel.py	/^    fpath = os.path.join(objectroot,fname)$/;"	v
fpath	pycode/new_verif_parallel.py	/^    fpath = os.path.join(outroot,"match_diffs",fname)$/;"	v
fpath	pycode/new_verif_parallel.py	/^    fpath = os.path.join(outroot,fname)$/;"	v
fpath	pycode/test_extraction.py	/^    fpath = os.path.join(froot,f)$/;"	v
fpath	pycode/test_extraction.py	/^fpath = "\/home\/john.lawson\/VSE_dx\/pyoutput\/check_domains.png"$/;"	v
fpath	pycode/test_kde.py	/^                fpath = os.path.join(outroot,'kde',fname)$/;"	v
fpath	pycode/test_kde.py	/^        fpath = os.path.join(outroot,'kde',fname)$/;"	v
fpath	pycode/test_kde.py	/^    fpath = os.path.join(outroot,fname)$/;"	v
fpath0	pycode/test_kde.py	/^    fpath0 = os.path.join(outroot,fname0)$/;"	v
fpath1	pycode/test_kde.py	/^    fpath1 = os.path.join(outroot,fname1)$/;"	v
fpath2	pycode/test_kde.py	/^    fpath2 = os.path.join(outroot,fname2)$/;"	v
fpath3	pycode/test_kde.py	/^    fpath3 = os.path.join(outroot,fname3)$/;"	v
froot	pycode/test_extraction.py	/^froot = '\/work\/john.lawson\/VSE_reso\/pp\/Xmas\/20160331'$/;"	v
fss	pycode/verif_parallel.py	/^def fss(fss_itr):$/;"	f
fss_itr	pycode/_old_verif_parallel.py	/^    fss_itr = generate_iterable(fss=True)$/;"	v
fss_itr	pycode/verif_parallel.py	/^    fss_itr = generate_iterable(fss=True)$/;"	v
fssdir	pycode/new_verif_parallel.py	/^    fssdir = os.path.join(extractroot,"efss_fiss")$/;"	v
ftime	pycode/test_crps.py	/^            ftime = itime + datetime.timedelta(seconds=3600)$/;"	v
gather_commands_one	pycode/extract_fields.py	/^def gather_commands_one(i):$/;"	f
gather_commands_two	pycode/extract_fields.py	/^def gather_commands_two(i):$/;"	f
gaussian_kde	pycode/_alt_verif_parallel.py	/^from scipy.stats import gaussian_kde$/;"	i
gaussian_kde	pycode/_old_verif_parallel.py	/^from scipy.stats import gaussian_kde$/;"	i
gaussian_kde	pycode/extract_fields.py	/^from scipy.stats import gaussian_kde$/;"	i
gaussian_kde	pycode/test_kde.py	/^from scipy.stats import gaussian_kde$/;"	i
gaussian_kde	pycode/verif_parallel.py	/^from scipy.stats import gaussian_kde$/;"	i
generate_LHS_draw	pycode/old_generate_namelists.py	/^def generate_LHS_draw(seed):$/;"	f
generate_all_folders	pycode/extract_fields.py	/^def generate_all_folders():$/;"	f
generate_all_folders	pycode/verif_parallel.py	/^def generate_all_folders():$/;"	f
generate_all_runs	pycode/extract_fields.py	/^def generate_all_runs():$/;"	f
generate_all_runs	pycode/verif_parallel.py	/^def generate_all_runs():$/;"	f
generate_fcst_loop	pycode/extract_fields.py	/^def generate_fcst_loop():$/;"	f
generate_fname	pycode/verif_parallel.py	/^def generate_fname(vrbl=None,metric=None,level=None,fcstmin=None,dom_pp=None,$/;"	f
generate_iterable	pycode/verif_parallel.py	/^def generate_iterable(fss=False):$/;"	f
generate_itr_from_commands	pycode/extract_fields.py	/^def generate_itr_from_commands(commands):$/;"	f
generate_obs_loop	pycode/extract_fields.py	/^def generate_obs_loop():$/;"	f
generate_seeds	pycode/old_generate_namelists.py	/^def generate_seeds(num):$/;"	f
generate_valid_utcs	pycode/extract_fields.py	/^def generate_valid_utcs(initutc):$/;"	f
get_all_initutcs	pycode/extract_fields.py	/^def get_all_initutcs():$/;"	f
get_all_initutcs	pycode/new_verif_parallel.py	/^def get_all_initutcs():$/;"	f
get_all_initutcs	pycode/verif_parallel.py	/^def get_all_initutcs():$/;"	f
get_bw	pycode/test_kde.py	/^def get_bw(arr,factor=1\/5,remove_std=False):$/;"	f
get_bw	pycode/verif_parallel.py	/^def get_bw(arr,factor=1\/5,remove_std=False):$/;"	f
get_case_code	pycode/new_verif_parallel.py	/^    def get_case_code(utc):$/;"	f	function:create_ens_df
get_color	pycode/new_verif_parallel.py	/^def get_color(fmt,mem):$/;"	f
get_data	pycode/extract_fields.py	/^def get_data(caseutc,fmt,vrbl=None,validutc=None,initutc=None,mem=None,$/;"	f
get_dom_int	pycode/verif_parallel.py	/^def get_dom_int(dom_pp):$/;"	f
get_extraction_fpaths	pycode/extract_fields.py	/^def get_extraction_fpaths(vrbl,fmt,validutc,caseutc,initutc=None,mem=None):$/;"	f
get_extraction_fpaths	pycode/new_verif_parallel.py	/^def get_extraction_fpaths(vrbl,fmt,validutc,caseutc,initutc=None,mem=None):$/;"	f
get_extraction_fpaths	pycode/verif_parallel.py	/^def get_extraction_fpaths(initstr,mem,vrbl,fmt,nt=37):$/;"	f
get_kw	pycode/new_verif_parallel.py	/^def get_kw(prodfmt,utc,mem=None,initutc=None,fpath=None):$/;"	f
get_leadtime_group	pycode/new_verif_parallel.py	/^    def get_leadtime_group(lt):$/;"	f	function:create_ens_df
get_llf_fpath	pycode/extract_fields.py	/^def get_llf_fpath(casestr,key):$/;"	f
get_mrms_extraction_fpath	pycode/verif_parallel.py	/^def get_mrms_extraction_fpath(initstr,validutc,vrbl,fmt):$/;"	f
get_mrms_rotdz_grid	pycode/extract_fields.py	/^def get_mrms_rotdz_grid(caseutc=None,vrbl=None,nc=None):$/;"	f
get_nice	pycode/new_verif_parallel.py	/^def get_nice(fmt):$/;"	f
get_object_picklepaths	pycode/new_verif_parallel.py	/^def get_object_picklepaths(vrbl,fmt,validutc,caseutc,initutc=None,mem=None):$/;"	f
get_prob	pycode/test_kde.py	/^        def get_prob(itr,method=2):$/;"	f
get_prob	pycode/verif_parallel.py	/^    def get_prob(itr,method=2):$/;"	f	function:do_kde
get_random_d01	pycode/extract_fields.py	/^def get_random_d01(caseutc):$/;"	f
get_random_domain	pycode/new_verif_parallel.py	/^def get_random_domain(caseutc,dom):$/;"	f
get_tempdata_fpath	pycode/extract_fields.py	/^def get_tempdata_fpath(caseutc,fmt,vrbl,validutc,initutc,mem):$/;"	f
get_valid_time	pycode/verif_parallel.py	/^def get_valid_time(initutc,fcstmin=None,fchr=None):$/;"	f
get_wrfout_fname	pycode/extract_fields.py	/^def get_wrfout_fname(t,dom):$/;"	f
get_wrfout_fname	pycode/new_verif_parallel.py	/^def get_wrfout_fname(t,dom):$/;"	f
glob	pycode/extract_fields.py	/^import glob$/;"	i
glob	pycode/generate_namelists.py	/^import glob$/;"	i
glob	pycode/new_verif_parallel.py	/^import glob$/;"	i
glob	pycode/old_generate_namelists.py	/^import glob$/;"	i
glob	pycode/unsparsify.py	/^import glob$/;"	i
griddata	pycode/test_crps.py	/^from scipy.interpolate import griddata$/;"	i
grids	pycode/_alt_verif_parallel.py	/^grids = ['d01_cut_3km','d01_interp_5km',$/;"	v
grids	pycode/verif_parallel.py	/^grids = ['d01_3km','d01_5km',$/;"	v
history_outname	pycode/generate_namelists.py	/^history_outname = False # Change this to absolute path of output file and location$/;"	v
history_outname	pycode/old_generate_namelists.py	/^history_outname = False # Change this to absolute path of output file and location$/;"	v
icbc_cmd	pycode/run_experiments.py	/^        icbc_cmd = 'copy'  $/;"	v
icdict	pycode/run_experiments.py	/^        icdict = {}$/;"	v
ics	pycode/run_experiments.py	/^            ics = icdict,$/;"	v
idx	pycode/test_kde.py	/^                idx = utils.closest(x,thresh)$/;"	v
ii	pycode/generate_namelists.py	/^        ii = 61$/;"	v
iii	pycode/_old_verif_parallel.py	/^        iii = generate_run_check()$/;"	v
iii	pycode/verif_parallel.py	/^        iii = generate_run_check()$/;"	v
init_dict	pycode/old_verif.py	/^init_dict = {}$/;"	v
init_kwargs	pycode/run_experiments.py	/^        init_kwargs = dict($/;"	v
initdir	pycode/old_verif.py	/^        initdir = utils.string_from_time('dir',initutc,strlen='hour')$/;"	v
initdir	pycode/test_crps.py	/^        initdir = utils.string_from_time('dir',initutc,strlen='hour')$/;"	v
initdt	pycode/generate_namelists.py	/^initdt = datetime.datetime.strptime(initstr,"%Y%m%d%H")$/;"	v
initstr	pycode/extract_fields.py	/^    initstr = utils.string_from_time('dir',initutc,strlen='hour')$/;"	v
initstr	pycode/generate_namelists.py	/^initstr = str(NS.initstr)$/;"	v
initstr	pycode/run_experiments.py	/^        initstr = utils.string_from_time('dir',initutc,strlen='hour')$/;"	v
initstr	pycode/test_crps.py	/^        initstr = utils.string_from_time('title',initutc,)$/;"	v
initstr	pycode/test_kde.py	/^initstr = '2016033120'$/;"	v
initutc	pycode/ensemble_verification.py	/^initutc = datetime.datetime(2016,3,31,21,0,0)$/;"	v
initutc	pycode/extract_fields.py	/^    initutc = initutcs[0]$/;"	v
initutc	pycode/new_verif_parallel.py	/^            initutc = initutcs[0]$/;"	v
initutc	pycode/run_experiments.py	/^            initutc = initutc,$/;"	v
initutc	pycode/test_kde.py	/^initutc = datetime.datetime(2016,3,31,20,0,0)$/;"	v
initutc	pycode/test_verif.py	/^initutc = datetime.datetime(2016,3,31,21,0,0)$/;"	v
initutcs	pycode/extract_fields.py	/^initutcs = get_all_initutcs()$/;"	v
initutcs	pycode/test_crps.py	/^initutcs = [datetime.datetime(2016,3,31,x,0,0) for x in (19,20,21,22)]$/;"	v
initutcs	pycode/verif_parallel.py	/^initutcs = get_all_initutcs()$/;"	v
intensity_arr	pycode/new_verif_parallel.py	/^    intensity_arr = N.zeros([100,40])$/;"	v
interp_method	pycode/test_crps.py	/^interp_method = 'linear'$/;"	v
interpolate	pycode/extract_fields.py	/^def interpolate(dataA,latsA,lonsA,latsB,lonsB,cut_only=False,$/;"	f
itertools	pycode/_alt_verif_parallel.py	/^import itertools$/;"	i
itertools	pycode/_old_verif_parallel.py	/^import itertools$/;"	i
itertools	pycode/_test_newruns.py	/^import itertools$/;"	i
itertools	pycode/extract_fields.py	/^import itertools$/;"	i
itertools	pycode/generate_namelists.py	/^import itertools$/;"	i
itertools	pycode/new_verif_parallel.py	/^import itertools$/;"	i
itertools	pycode/old_generate_namelists.py	/^import itertools$/;"	i
itertools	pycode/verif_parallel.py	/^import itertools$/;"	i
itimes	pycode/test_crps.py	/^        itimes = [initutc + datetime.timedelta(seconds=3600*n) for n in range(3)]$/;"	v
itr	pycode/_old_verif_parallel.py	/^    itr = generate_iterable()$/;"	v
itr	pycode/_old_verif_parallel.py	/^    itr = list(generate_iterable())$/;"	v
itr	pycode/extract_fields.py	/^    itr = generate_itr_from_commands(commands)$/;"	v
itr	pycode/extract_fields.py	/^    itr = join_all_cmd$/;"	v
itr	pycode/test_kde.py	/^        itr = itr_fcst(fcst=fcst,nlat=nlat,nlon=nlon)$/;"	v
itr	pycode/verif_parallel.py	/^    itr = generate_iterable()$/;"	v
itr	pycode/verif_parallel.py	/^    itr = list(generate_iterable())$/;"	v
itr_fcst	pycode/test_kde.py	/^        def itr_fcst(fcst,nlat,nlon):$/;"	f
itr_fcst	pycode/verif_parallel.py	/^    def itr_fcst(fcst,nlat,nlon):$/;"	f	function:do_kde
jj	pycode/generate_namelists.py	/^        jj = 61$/;"	v
join_all_cmd	pycode/extract_fields.py	/^    join_all_cmd = [el for sublist in join_all_cmd for el in sublist]$/;"	v
join_all_cmd	pycode/extract_fields.py	/^join_all_cmd = all_cmd[0] + all_cmd[1]$/;"	v
kde	pycode/test_kde.py	/^                kde = gaussian_kde(dataset=fcst1D,bw_method=bw)$/;"	v
kde	pycode/test_kde.py	/^            kde = smapi.nonparametric.KDEUnivariate(fcst1Da)$/;"	v
kde	pycode/test_kde.py	/^    kde = gaussian_kde(dataset=fcst1D,bw_method=bw)$/;"	v
kdepc	pycode/test_kde.py	/^                kdepc = (1-kde.cdf[idx])*100$/;"	v
kdepc	pycode/test_kde.py	/^    kdepc = (kde.integrate_box_1d(thresh,xmax))*100$/;"	v
key	pycode/generate_namelists.py	/^    key = NS.key$/;"	v
key	pycode/old_generate_namelists.py	/^    key = NS.key$/;"	v
key	pycode/run_experiments.py	/^key = 'ForReal_nco'$/;"	v
key_plot	pycode/_alt_verif_parallel.py	/^key_plot = 'Xmas'$/;"	v
key_plot	pycode/_old_verif_parallel.py	/^key_plot = 'Xmas'$/;"	v
key_plot	pycode/extract_fields.py	/^key_plot = 'AprilFool'$/;"	v
key_plot	pycode/verif_parallel.py	/^key_plot = 'Xmas'$/;"	v
key_pp	pycode/_alt_verif_parallel.py	/^key_pp = 'Xmas'$/;"	v
key_pp	pycode/_old_verif_parallel.py	/^key_pp = 'Xmas'$/;"	v
key_pp	pycode/extract_fields.py	/^key_pp = 'AprilFool'$/;"	v
key_pp	pycode/new_verif_parallel.py	/^key_pp = 'AprilFool'$/;"	v
key_pp	pycode/verif_parallel.py	/^key_pp = 'Xmas'$/;"	v
key_scores	pycode/_alt_verif_parallel.py	/^key_scores = 'Xmas'$/;"	v
key_scores	pycode/_old_verif_parallel.py	/^key_scores = 'Xmas'$/;"	v
key_scores	pycode/extract_fields.py	/^key_scores = 'AprilFool'$/;"	v
key_scores	pycode/verif_parallel.py	/^key_scores = 'Xmas'$/;"	v
key_wrf	pycode/_alt_verif_parallel.py	/^key_wrf = 'ForReal_nco'$/;"	v
key_wrf	pycode/_old_verif_parallel.py	/^key_wrf = 'ForReal_nco'$/;"	v
key_wrf	pycode/extract_fields.py	/^key_wrf = 'ForReal_nco'$/;"	v
key_wrf	pycode/verif_parallel.py	/^key_wrf = 'ForReal_nco'$/;"	v
kmstr	pycode/new_verif_parallel.py	/^        kmstr = "1km" if "1km" in fcst_fmt else "3km"$/;"	v
kw	pycode/new_verif_parallel.py	/^                        kw = dict(alpha=0.5,levels=N.arange(0.001,0.50,0.001))$/;"	v
kw	pycode/new_verif_parallel.py	/^                        kw = dict(levels=N.arange(5,95),cmap=S.cm)$/;"	v
kwargs	pycode/test_objectid.py	/^kwargs = dict($/;"	v
label	pycode/new_verif_parallel.py	/^                    label = None$/;"	v
label	pycode/new_verif_parallel.py	/^                    label = casestr$/;"	v
lats	pycode/new_verif_parallel.py	/^                lats = N.load(os.path.join(extractroot,fdir,casestr,"lats.npy"))$/;"	v
lbcdict	pycode/run_experiments.py	/^        lbcdict = {}$/;"	v
lbcs	pycode/run_experiments.py	/^            lbcs = lbcdict,$/;"	v
ld	pycode/test_verif.py	/^            ld = d02_limdict$/;"	v
ld	pycode/test_verif.py	/^            ld = {}$/;"	v
levels	pycode/test_kde.py	/^        levels = N.arange(2,102,2)$/;"	v
levels	pycode/test_kde.py	/^    levels = N.arange(5,105,5)$/;"	v
llcrnrlat	pycode/new_verif_parallel.py	/^                                        llcrnrlat=lats.min(),llcrnrlon=lons.min(),$/;"	v
load_W_df	pycode/new_verif_parallel.py	/^def load_W_df(W_lookup,CAT):$/;"	f
load_W_lookup	pycode/new_verif_parallel.py	/^def load_W_lookup(fcst_fmts):#fmts):$/;"	f
load_both_data	pycode/new_verif_parallel.py	/^def load_both_data(fcst_vrbl,fcst_fmt,validutc,caseutc,initutc,mem):$/;"	f
load_data	pycode/verif_parallel.py	/^def load_data(nc_fpath,vrbl,npyfpaths):$/;"	f
load_ens_df	pycode/new_verif_parallel.py	/^def load_ens_df(df_og):$/;"	f
load_ens_switch	pycode/old_verif.py	/^load_ens_switch = max(compute_crps,compute_detscores,plot_thumbs,$/;"	v
load_fcst_dll	pycode/new_verif_parallel.py	/^def load_fcst_dll(fcst_vrbl,fcst_fmt,validutc,caseutc,initutc,mem):$/;"	f
load_latlons	pycode/new_verif_parallel.py	/^def load_latlons(fmt,caseutc):$/;"	f
load_megaframe	pycode/new_verif_parallel.py	/^def load_megaframe(fmts,add_ens=True,add_W=True):$/;"	f
load_obj	pycode/new_verif_parallel.py	/^def load_obj():$/;"	f
load_obs_dll	pycode/new_verif_parallel.py	/^def load_obs_dll(validutc,caseutc,obs_vrbl=None,fcst_vrbl=None,obs_fmt=None,$/;"	f
load_timewindow_both_data	pycode/new_verif_parallel.py	/^def load_timewindow_both_data(vrbl,fmt,validutc,caseutc,initutc,window=1,mem='all'):$/;"	f
logging	pycode/_old_verif_parallel.py	/^import logging$/;"	i
logging	pycode/extract_fields.py	/^import logging$/;"	i
logging	pycode/new_verif_parallel.py	/^import logging$/;"	i
logging	pycode/verif_parallel.py	/^import logging$/;"	i
lons	pycode/new_verif_parallel.py	/^                lons = N.load(os.path.join(extractroot,fdir,casestr,"lons.npy"))$/;"	v
lookup_mrms_metadata	pycode/extract_fields.py	/^def lookup_mrms_metadata(caseutc,vrbl):$/;"	f
loop_efss	pycode/new_verif_parallel.py	/^def loop_efss(vrbl,fcstmin,fmt):$/;"	f
loop_ens_data	pycode/new_verif_parallel.py	/^def loop_ens_data(fcst_vrbl,fcst_fmts):$/;"	f
loop_obj_fcst	pycode/new_verif_parallel.py	/^def loop_obj_fcst(fcst_vrbl,fcstmins,fcst_fmt,members):$/;"	f
loop_obj_obs	pycode/new_verif_parallel.py	/^def loop_obj_obs(obs_vrbl,all_times=True):$/;"	f
loop_perf	pycode/new_verif_parallel.py	/^def loop_perf(vrbl,thresh,fcstmin=None,fcst_fmt=None):$/;"	f
loop_through_domains	pycode/test_crps.py	/^def loop_through_domains(E,itime,ftime,initstr=None,doms='auto'):$/;"	f
lvidx	pycode/_test_newruns.py	/^                    lvidx = 20$/;"	v
lvidx	pycode/_test_newruns.py	/^                lvidx = 0$/;"	v
lvs	pycode/_test_newruns.py	/^                    lvs = N.arange(2.5,22.5,2.5)$/;"	v
lvs	pycode/_test_newruns.py	/^                    lvs = S.clvs$/;"	v
m01dir	pycode/extract_fields.py	/^    m01dir = os.path.join(ensroot,initstr,"m01")$/;"	v
math	pycode/test_kde.py	/^import math$/;"	i
matplotlib	pycode/_alt_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/_old_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/_test_newruns.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/ensemble_verification.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/extract_fields.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/new_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/test_crps.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/test_extraction.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/test_kde.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/test_verif.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/unsparsify.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	pycode/verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
maxsize	pycode/_old_verif_parallel.py	/^    maxsize = max(xfs_all.shape[2:])$/;"	v
megaframe	pycode/new_verif_parallel.py	/^    megaframe = load_megaframe(fmts=all_fmts)$/;"	v
megaframe	pycode/new_verif_parallel.py	/^    megaframe = megaframe_all[(megaframe_all['case_code'] == '20160331') &$/;"	v
megaframe_all	pycode/new_verif_parallel.py	/^    megaframe_all = load_megaframe(fmts=all_fmts)$/;"	v
member_names	pycode/extract_fields.py	/^member_names = ['m{:02d}'.format(n) for n in range(1,37)]$/;"	v
member_names	pycode/new_verif_parallel.py	/^member_names = ['m{:02d}'.format(n) for n in range(1,37)]$/;"	v
member_names	pycode/verif_parallel.py	/^member_names = ['m{:02d}'.format(n) for n in range(1,37)]$/;"	v
membernames	pycode/run_experiments.py	/^            membernames = membernames,$/;"	v
membernames	pycode/run_experiments.py	/^        membernames = ['m{:02d}'.format(n) for n in range(1,nmems+1)]$/;"	v
memname	pycode/test_verif.py	/^                memname = 'm{:02d}'.format(plot)$/;"	v
memnos	pycode/run_experiments.py	/^        memnos = N.arange(1,nmems+1)$/;"	v
merge_lbcs	pycode/run_experiments.py	/^                            merge_lbcs=True,$/;"	v
miniframe	pycode/new_verif_parallel.py	/^    miniframe = megaframe[(megaframe['resolution'] == "hi-res") &$/;"	v
mp_log	pycode/_old_verif_parallel.py	/^mp_log = multiprocessing.log_to_stderr()$/;"	v
mp_log	pycode/verif_parallel.py	/^mp_log = multiprocessing.log_to_stderr()$/;"	v
mrmsdir	pycode/_alt_verif_parallel.py	/^mrmsdir = 'work\/john.lawson\/MRMS_data\/VSE_reso'$/;"	v
mrmsdir	pycode/_old_verif_parallel.py	/^mrmsdir = 'work\/john.lawson\/MRMS_data\/VSE_reso'$/;"	v
mrmsdir	pycode/extract_fields.py	/^mrmsdir = '\/work\/john.lawson\/MRMS_data\/rot-dz'$/;"	v
mrmsdir	pycode/test_objectid.py	/^        mrmsdir = '\/work1\/skinnerp\/MRMS_verif\/mrms_cressman\/20170504',$/;"	v
mrmsdir	pycode/verif_parallel.py	/^mrmsdir = 'work\/john.lawson\/MRMS_data\/VSE_reso'$/;"	v
multiprocessing	pycode/_alt_verif_parallel.py	/^import multiprocessing$/;"	i
multiprocessing	pycode/_old_verif_parallel.py	/^import multiprocessing$/;"	i
multiprocessing	pycode/extract_fields.py	/^import multiprocessing$/;"	i
multiprocessing	pycode/new_verif_parallel.py	/^import multiprocessing$/;"	i
multiprocessing	pycode/verif_parallel.py	/^import multiprocessing$/;"	i
name	pycode/new_verif_parallel.py	/^                name = "_".join((casestr,dname))$/;"	v
namelistdir	pycode/run_experiments.py	/^        namelistdir = PosixPath('\/home\/john.lawson\/VSE_reso\/pycode\/namelists\/{}\/{}'.format(key,casestr))$/;"	v
namelists	pycode/generate_namelists.py	/^namelists = ['namelist.input.{0}'.format(n) for n in ensnums]$/;"	v
namelists	pycode/old_generate_namelists.py	/^namelists = ['namelist.input.{0}'.format(n) for n in ensnums]$/;"	v
nc	pycode/unsparsify.py	/^import netCDF4 as nc$/;"	i
ncno	pycode/_test_newruns.py	/^                ncno = " ncrcat"$/;"	v
ncno	pycode/_test_newruns.py	/^                ncno = 3$/;"	v
ncno	pycode/_test_newruns.py	/^                ncno = 4$/;"	v
ncpus	pycode/_old_verif_parallel.py	/^ncpus = parser.parse_args().ncpus$/;"	v
ncpus	pycode/extract_fields.py	/^ncpus = PA.ncpus$/;"	v
ncpus	pycode/new_verif_parallel.py	/^ncpus = PA.ncpus$/;"	v
ncpus	pycode/old_verif.py	/^ncpus = 1$/;"	v
ncpus	pycode/test_objectid.py	/^        ncpus = 30,$/;"	v
ncpus	pycode/verif_parallel.py	/^ncpus = parser.parse_args().ncpus$/;"	v
ndoms	pycode/run_experiments.py	/^            ndoms = 2,$/;"	v
ne	pycode/test_objectid.py	/^        ne = 36,$/;"	v
nens	pycode/generate_namelists.py	/^nens = int(NS.nmems) # Number of ensemble members$/;"	v
nens	pycode/old_generate_namelists.py	/^nens = 18 # Number of ensemble members$/;"	v
netCDF4	pycode/_alt_verif_parallel.py	/^import netCDF4$/;"	i
netCDF4	pycode/_old_verif_parallel.py	/^import netCDF4$/;"	i
netCDF4	pycode/extract_fields.py	/^import netCDF4$/;"	i
netCDF4	pycode/verif_parallel.py	/^import netCDF4$/;"	i
new_nl_path	pycode/run_experiments.py	/^        new_nl_path = namelistdir \/ 'namelist.input.template'$/;"	v
newse_mems	pycode/run_experiments.py	/^        newse_mems =  ['mem{}'.format(n) for n in range(1,nmems+1)]$/;"	v
nexrad_lats	pycode/extract_fields.py	/^            nexrad_lats = RADARS.lats.astype("float32")$/;"	v
nexrad_lons	pycode/extract_fields.py	/^            nexrad_lons = RADARS.lons.astype("float32")$/;"	v
nfcstmin	pycode/_old_verif_parallel.py	/^    nfcstmin = len(all_fcstmins)$/;"	v
nflat	pycode/test_kde.py	/^nflat = nlat*nlon$/;"	v
nidxs	pycode/generate_namelists.py	/^nidxs = range(nens) # indices of each ensemble$/;"	v
nidxs	pycode/old_generate_namelists.py	/^nidxs = range(nens) # indices of each ensemble$/;"	v
nl_per_member	pycode/run_experiments.py	/^            nl_per_member = 'dot_number',$/;"	v
nmems	pycode/run_experiments.py	/^        nmems = 36$/;"	v
nmems	pycode/test_kde.py	/^                nmems = fcst1Da.size$/;"	v
nodes	pycode/run_experiments.py	/^                            nodes=1,$/;"	v
np	pycode/_old_unsparsify.py	/^np = N$/;"	v
np	pycode/unsparsify.py	/^import numpy as np$/;"	i
npydir	pycode/old_verif.py	/^        npydir = os.path.join(npyroot,initdir)$/;"	v
npyroot	pycode/_alt_verif_parallel.py	/^npyroot = '\/work\/john.lawson\/VSE_reso\/scores\/{}'.format(key_scores)$/;"	v
npyroot	pycode/_old_verif_parallel.py	/^npyroot = '\/work\/john.lawson\/VSE_reso\/scores\/{}'.format(key_scores)$/;"	v
npyroot	pycode/old_verif.py	/^npyroot = '\/work\/john.lawson\/VSE_reso\/scores'$/;"	v
npyroot	pycode/verif_parallel.py	/^npyroot = '\/work\/john.lawson\/VSE_reso\/scores\/{}'.format(key_scores)$/;"	v
nx	pycode/test_crps.py	/^nx = 50$/;"	v
ny	pycode/test_crps.py	/^ny = 50$/;"	v
oID	pycode/test_objectid.py	/^oID = ObjectID(**kwargs)$/;"	v
ob2fc	pycode/new_verif_parallel.py	/^def ob2fc(obs_vrbl,obs_fmt):$/;"	f
obj_arr	pycode/new_verif_parallel.py	/^    obj_arr = N.zeros_like(intensity_arr)$/;"	v
objdir	pycode/test_objectid.py	/^        objdir = os.path.join(rootdir,'objectfiles'),$/;"	v
object_switch	pycode/new_verif_parallel.py	/^object_switch = False$/;"	v
objectroot	pycode/new_verif_parallel.py	/^objectroot = os.path.join(extractroot,'object_instances')$/;"	v
obs_fmts	pycode/new_verif_parallel.py	/^    obs_fmts = ("nexrad_3km","nexrad_1km")$/;"	v
obs_grid	pycode/_old_verif_parallel.py	/^    obs_grid = NEWGRID$/;"	v
obs_vrbl	pycode/new_verif_parallel.py	/^    obs_vrbl = "NEXRAD"$/;"	v
obs_vrbls	pycode/extract_fields.py	/^obs_vrbls = ("AWS02",)$/;"	v
obs_vrbls	pycode/new_verif_parallel.py	/^obs_vrbls = ("AWS02","AWS25","DZ","ST4","NEXRAD")$/;"	v
og_nl_path	pycode/run_experiments.py	/^        og_nl_path = wofdir \/ 'mem1' \/ 'namelist.input'$/;"	v
onlydo	pycode/generate_namelists.py	/^onlydo = NS.onlydo $/;"	v
onlydo	pycode/old_generate_namelists.py	/^onlydo = NS.onlydo $/;"	v
open_random_rotdz	pycode/extract_fields.py	/^def open_random_rotdz(caseutc,vrbl):$/;"	f
opt	pycode/test_verif.py	/^            opt = "large"$/;"	v
opt	pycode/test_verif.py	/^            opt = "small"$/;"	v
os	pycode/_alt_verif_parallel.py	/^import os$/;"	i
os	pycode/_old_verif_parallel.py	/^import os$/;"	i
os	pycode/_test_newruns.py	/^import os$/;"	i
os	pycode/ensemble_verification.py	/^import os$/;"	i
os	pycode/extract_fields.py	/^import os$/;"	i
os	pycode/figure_caseoutline.py	/^import os$/;"	i
os	pycode/generate_namelists.py	/^import os$/;"	i
os	pycode/move_around_files.py	/^import os$/;"	i
os	pycode/new_verif_parallel.py	/^import os$/;"	i
os	pycode/old_generate_namelists.py	/^import os$/;"	i
os	pycode/old_verif.py	/^import os$/;"	i
os	pycode/run_experiments.py	/^import os$/;"	i
os	pycode/test_crps.py	/^import os$/;"	i
os	pycode/test_extraction.py	/^import os$/;"	i
os	pycode/test_kde.py	/^import os$/;"	i
os	pycode/test_objectid.py	/^import os$/;"	i
os	pycode/test_verif.py	/^import os$/;"	i
os	pycode/verif_parallel.py	/^import os$/;"	i
otherdir	pycode/run_experiments.py	/^        otherdir = PosixPath('\/home\/john.lawson\/VSE_reso\/otherfiles')$/;"	v
outdir	pycode/_test_newruns.py	/^outdir = '\/home\/john.lawson\/VSE_reso\/pyoutput\/tests'$/;"	v
outdir	pycode/ensemble_verification.py	/^outdir = '\/home\/john.lawson\/VSE_reso\/pyoutput\/attempt1'$/;"	v
outdir	pycode/generate_namelists.py	/^outdir = os.path.join(os.path.dirname(os.path.abspath(__file__)),'namelists',key,str(NS.casestr))$/;"	v
outdir	pycode/old_generate_namelists.py	/^outdir = os.path.join(os.path.dirname(os.path.abspath(__file__)),'namelists',key,str(NS.casestr))$/;"	v
outdir	pycode/old_verif.py	/^                outdir=os.path.join(outdir,'detscores'),score=score,$/;"	v
outdir	pycode/old_verif.py	/^        outdir = os.path.join(outroot,casestr,initdir)$/;"	v
outdir	pycode/test_crps.py	/^                                outdir=outdir,)$/;"	v
outdir	pycode/test_crps.py	/^outdir = '\/home\/john.lawson\/VSE_reso\/pyoutput'$/;"	v
outdir	pycode/test_verif.py	/^outdir = '\/home\/john.lawson\/VSE_reso\/pyoutput\/test2'$/;"	v
outfpath	pycode/test_verif.py	/^        outfpath = os.path.join(outdir,fname)$/;"	v
outroot	pycode/_alt_verif_parallel.py	/^outroot = '\/home\/john.lawson\/VSE_reso\/pyoutput\/{}'.format(key_plot)$/;"	v
outroot	pycode/_old_verif_parallel.py	/^outroot = '\/home\/john.lawson\/VSE_reso\/pyoutput\/{}'.format(key_plot)$/;"	v
outroot	pycode/new_verif_parallel.py	/^outroot = "\/Users\/john.lawson\/data\/figures"$/;"	v
outroot	pycode/old_verif.py	/^outroot = '\/home\/john.lawson\/VSE_reso\/pyoutput'$/;"	v
outroot	pycode/test_kde.py	/^outroot = '\/home\/john.lawson\/VSE_reso\/pyoutput\/'$/;"	v
outroot	pycode/verif_parallel.py	/^outroot = '\/home\/john.lawson\/VSE_reso\/pyoutput\/{}'.format(key_plot)$/;"	v
overwrite	pycode/old_verif.py	/^                            overwrite=False)$/;"	v
overwrite_extraction	pycode/_old_verif_parallel.py	/^overwrite_extraction = parser.parse_args().overwrite_extraction$/;"	v
overwrite_output	pycode/_old_verif_parallel.py	/^overwrite_output = parser.parse_args().overwrite_output$/;"	v
overwrite_output	pycode/new_verif_parallel.py	/^overwrite_output = PA.overwrite_output$/;"	v
overwrite_output	pycode/verif_parallel.py	/^overwrite_output = parser.parse_args().overwrite_output$/;"	v
overwrite_pp	pycode/new_verif_parallel.py	/^overwrite_pp = PA.overwrite_pp$/;"	v
overwrite_scores	pycode/_old_verif_parallel.py	/^overwrite_scores = parser.parse_args().overwrite_scores$/;"	v
overwrite_scores	pycode/verif_parallel.py	/^overwrite_scores = parser.parse_args().overwrite_scores$/;"	v
palette	pycode/new_verif_parallel.py	/^    palette = itertools.cycle(sns.cubehelix_palette(14,light=0.8,dark=0.2))$/;"	v
pandas	pycode/new_verif_parallel.py	/^import pandas$/;"	i
parser	pycode/_old_verif_parallel.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	pycode/extract_fields.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	pycode/generate_namelists.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	pycode/new_verif_parallel.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	pycode/old_generate_namelists.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	pycode/verif_parallel.py	/^parser = argparse.ArgumentParser()$/;"	v
path_to_batch	pycode/run_experiments.py	/^            path_to_batch = otherdir\/'run_wrf.job',$/;"	v
path_to_datadir	pycode/run_experiments.py	/^            path_to_datadir = rundir,$/;"	v
path_to_exedir	pycode/run_experiments.py	/^            path_to_exedir = wrfdir ,$/;"	v
path_to_ic	pycode/run_experiments.py	/^            path_to_ic = wofdir \/ 'WRFOUT' \/ wrfout_needed$/;"	v
path_to_icdir	pycode/run_experiments.py	/^            path_to_icdir = False,$/;"	v
path_to_lbcdir	pycode/run_experiments.py	/^            path_to_lbcdir = False,$/;"	v
path_to_namelist_template	pycode/generate_namelists.py	/^path_to_namelist_template = '\/home\/john.lawson\/VSE_reso\/pycode\/namelists\/{}\/{}\/namelist.input.template'.format($/;"	v
path_to_namelist_template	pycode/old_generate_namelists.py	/^path_to_namelist_template = '\/home\/john.lawson\/VSE_reso\/pycode\/namelists\/{}\/{}\/namelist.input.template'.format($/;"	v
path_to_namelistdir	pycode/run_experiments.py	/^            path_to_namelistdir = namelistdir,$/;"	v
path_to_newinput	pycode/run_experiments.py	/^            path_to_newinput = rundir \/ mem \/ 'wrfinput_d01'$/;"	v
path_to_outdir	pycode/run_experiments.py	/^            path_to_outdir = rootdir\/'outdir',$/;"	v
paths_to_nl	pycode/generate_namelists.py	/^paths_to_nl = {}$/;"	v
paths_to_nl	pycode/old_generate_namelists.py	/^paths_to_nl = {}$/;"	v
pca	pycode/new_verif_parallel.py	/^    pca = P['pca']$/;"	v
pdb	pycode/_alt_verif_parallel.py	/^import pdb$/;"	i
pdb	pycode/_old_unsparsify.py	/^import pdb$/;"	i
pdb	pycode/_old_verif_parallel.py	/^import pdb$/;"	i
pdb	pycode/_test_newruns.py	/^import pdb$/;"	i
pdb	pycode/ensemble_verification.py	/^import pdb$/;"	i
pdb	pycode/extract_fields.py	/^import pdb$/;"	i
pdb	pycode/figure_caseoutline.py	/^import pdb$/;"	i
pdb	pycode/generate_namelists.py	/^import pdb$/;"	i
pdb	pycode/move_around_files.py	/^import pdb$/;"	i
pdb	pycode/new_verif_parallel.py	/^import pdb$/;"	i
pdb	pycode/old_generate_namelists.py	/^import pdb$/;"	i
pdb	pycode/old_verif.py	/^import pdb$/;"	i
pdb	pycode/run_experiments.py	/^import pdb$/;"	i
pdb	pycode/test_crps.py	/^import pdb$/;"	i
pdb	pycode/test_extraction.py	/^import pdb$/;"	i
pdb	pycode/test_kde.py	/^import pdb$/;"	i
pdb	pycode/test_objectid.py	/^import pdb$/;"	i
pdb	pycode/test_verif.py	/^import pdb$/;"	i
pdb	pycode/unsparsify.py	/^import pdb$/;"	i
pdb	pycode/verif_parallel.py	/^import pdb$/;"	i
pickle	pycode/_alt_verif_parallel.py	/^import pickle $/;"	i
pickle	pycode/_old_verif_parallel.py	/^import pickle $/;"	i
pickle	pycode/extract_fields.py	/^import pickle$/;"	i
pickle	pycode/new_verif_parallel.py	/^import pickle$/;"	i
pickle	pycode/verif_parallel.py	/^import pickle $/;"	i
plot	pycode/_old_verif_parallel.py	/^def plot(itr):$/;"	f
plot	pycode/verif_parallel.py	/^def plot(itr):$/;"	f
plot_brier	pycode/verif_parallel.py	/^plot_brier = 0$/;"	v
plot_casati	pycode/verif_parallel.py	/^plot_casati = 0$/;"	v
plot_crps	pycode/old_verif.py	/^plot_crps = 0$/;"	v
plot_crps	pycode/verif_parallel.py	/^plot_crps = 0$/;"	v
plot_detscores	pycode/old_verif.py	/^plot_detscores = 0$/;"	v
plot_detscores	pycode/verif_parallel.py	/^plot_detscores = 0$/;"	v
plot_domains	pycode/test_crps.py	/^plot_domains = False$/;"	v
plot_esal	pycode/verif_parallel.py	/^plot_esal = 0$/;"	v
plot_fi	pycode/verif_parallel.py	/^plot_fi = 0$/;"	v
plot_fss	pycode/verif_parallel.py	/^plot_fss = 0$/;"	v
plot_fv	pycode/verif_parallel.py	/^plot_fv = 0$/;"	v
plot_obj	pycode/_alt_verif_parallel.py	/^plot_obj = False$/;"	v
plot_object_hist	pycode/old_verif.py	/^plot_object_hist = 0$/;"	v
plot_object_hist	pycode/verif_parallel.py	/^plot_object_hist = 0$/;"	v
plot_performance	pycode/verif_parallel.py	/^plot_performance = 0$/;"	v
plot_scores	pycode/ensemble_verification.py	/^def plot_scores(plotutc):$/;"	f
plot_test	pycode/verif_parallel.py	/^def plot_test(data,W,utc,vrbl,dom=0,fcst=False,verif=False,pl=False,$/;"	f
plot_thumbnails	pycode/ensemble_verification.py	/^def plot_thumbnails(plotutc,vrbl):$/;"	f
plot_thumbs	pycode/old_verif.py	/^plot_thumbs = 1$/;"	v
plot_thumbs	pycode/verif_parallel.py	/^plot_thumbs = 0$/;"	v
plotdir	pycode/test_objectid.py	/^        plotdir = os.path.join(rootdir,'plots\/'),$/;"	v
plotlist	pycode/ensemble_verification.py	/^plotlist = ['Verif',''] + list(range(1,11))$/;"	v
plotlist	pycode/test_verif.py	/^plotlist = ['Verif',''] + list(range(1,11))$/;"	v
plotroot	pycode/extract_fields.py	/^plotroot = '\/home\/john.lawson\/VSE_reso\/pyoutput\/{}'.format(key_plot)$/;"	v
plotutc	pycode/_test_newruns.py	/^plotutc = datetime.datetime(2017,5,3,2,0,0)$/;"	v
plotutc	pycode/test_verif.py	/^    plotutc = initutc + datetime.timedelta(seconds=int(3600*fhr))$/;"	v
plt	pycode/_alt_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/_old_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/_test_newruns.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/ensemble_verification.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/extract_fields.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/new_verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/test_crps.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/test_extraction.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/test_kde.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/test_verif.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/unsparsify.py	/^import matplotlib.pyplot as plt$/;"	i
plt	pycode/verif_parallel.py	/^import matplotlib.pyplot as plt$/;"	i
pp_root	pycode/extract_fields.py	/^pp_root = '\/work\/john.lawson\/VSE_reso\/pp\/{}'.format(key_pp)$/;"	v
pres	pycode/run_experiments.py	/^            pres = ['wrf.exe' ,  'qr_acr_qg.bin' ,$/;"	v
pres	pycode/run_experiments.py	/^            pres = ['wrf.exe' , $/;"	v
prob	pycode/test_kde.py	/^                prob = 0.0$/;"	v
prob	pycode/test_kde.py	/^                prob = kde.integrate_box_1d(thresh,xmax)*100$/;"	v
prop_names	pycode/new_verif_parallel.py	/^    prop_names = []$/;"	v
qlcsmax	pycode/new_verif_parallel.py	/^    qlcsmax = round_nearest(qlcs_all.max(),intv,method='ceil')$/;"	v
qlcsmin	pycode/new_verif_parallel.py	/^    qlcsmin = round_nearest(qlcs_all.min(),intv,method='floor')$/;"	v
qlcsness_vals	pycode/new_verif_parallel.py	/^    qlcsness_vals = N.linspace(qlcsmin,qlcsmax,nstorms)$/;"	v
quarterly	pycode/old_verif.py	/^quarterly = list(N.arange(0.25,3.25,0.25))$/;"	v
ra_lw_physics	pycode/generate_namelists.py	/^ra_lw_physics = None$/;"	v
ra_lw_physics	pycode/old_generate_namelists.py	/^ra_lw_physics = None$/;"	v
ra_sw_physics	pycode/generate_namelists.py	/^ra_sw_physics = None$/;"	v
ra_sw_physics	pycode/old_generate_namelists.py	/^ra_sw_physics = None$/;"	v
radardir	pycode/ensemble_verification.py	/^radardir = '\/work\/john.lawson\/NEXRAD_data'$/;"	v
radardir	pycode/extract_fields.py	/^radardir = '\/work\/john.lawson\/NEXRAD_data'$/;"	v
radardir	pycode/old_verif.py	/^radardir = '\/work\/john.lawson\/NEXRAD_data'$/;"	v
radardir	pycode/test_verif.py	/^radardir = '\/work\/john.lawson\/NEXRAD_data'$/;"	v
random	pycode/_alt_verif_parallel.py	/^import random$/;"	i
random	pycode/_old_verif_parallel.py	/^import random$/;"	i
random	pycode/extract_fields.py	/^import random$/;"	i
random	pycode/generate_namelists.py	/^import random$/;"	i
random	pycode/old_generate_namelists.py	/^import random$/;"	i
random	pycode/verif_parallel.py	/^import random$/;"	i
rawpc	pycode/test_kde.py	/^                rawpc = (len(fcst1Da[fcst1Da > thresh])\/nmems)*100$/;"	v
rawpc	pycode/test_kde.py	/^        rawpc = utils.exceed_probs_2d(fcst,thresh)$/;"	v
rawpc	pycode/test_kde.py	/^    rawpc = (len(fcst1D[fcst1D > thresh])\/nmems)*100$/;"	v
rawpc	pycode/test_kde.py	/^    rawpc = utils.exceed_probs_2d(fcst,thresh)$/;"	v
rd	pycode/old_verif.py	/^rd = dict(nx=50,ny=50)$/;"	v
readwdssii	pycode/extract_fields.py	/^from unsparsify import readwdssii$/;"	i
readwdssii	pycode/unsparsify.py	/^def readwdssii(fin):$/;"	f
remove_nans	pycode/verif_parallel.py	/^def remove_nans(data,vrbl):$/;"	f
reproj_fcst_root	pycode/_alt_verif_parallel.py	/^reproj_fcst_root = '\/work\/john.lawson\/VSE_reso\/reproj_fcst\/{}'.format(key_pp)$/;"	v
reproj_fcst_root	pycode/_old_verif_parallel.py	/^reproj_fcst_root = '\/work\/john.lawson\/VSE_reso\/reproj_fcst\/{}'.format(key_pp)$/;"	v
reproj_fcst_root	pycode/verif_parallel.py	/^reproj_fcst_root = '\/work\/john.lawson\/VSE_reso\/reproj_fcst\/{}'.format(key_pp)$/;"	v
reproj_grid_root	pycode/_alt_verif_parallel.py	/^reproj_grid_root = '\/work\/john.lawson\/VSE_reso\/reproj_grid\/{}'.format(key_pp) $/;"	v
reproj_grid_root	pycode/_old_verif_parallel.py	/^reproj_grid_root = '\/work\/john.lawson\/VSE_reso\/reproj_grid\/{}'.format(key_pp) $/;"	v
reproj_obs_root	pycode/_alt_verif_parallel.py	/^reproj_obs_root = '\/work\/john.lawson\/VSE_reso\/reproj_obs\/{}'.format(key_pp)$/;"	v
reproj_obs_root	pycode/_old_verif_parallel.py	/^reproj_obs_root = '\/work\/john.lawson\/VSE_reso\/reproj_obs\/{}'.format(key_pp)$/;"	v
reproj_obs_root	pycode/verif_parallel.py	/^reproj_obs_root = '\/work\/john.lawson\/VSE_reso\/reproj_obs\/{}'.format(key_pp)$/;"	v
reproject	pycode/test_crps.py	/^from evac.utils.reproject_tools import reproject, WRF_native_grid, create_new_grid, VerifGrid$/;"	i
result_arr	pycode/test_kde.py	/^        result_arr = N.array(results)$/;"	v
results	pycode/_old_verif_parallel.py	/^                results = pool.map(check_wrfout,iii,)#chunksize=1)$/;"	v
results	pycode/_old_verif_parallel.py	/^                results = pool.map(run_parallel,itr,)#chunksize=1)$/;"	v
results	pycode/_old_verif_parallel.py	/^            results = []$/;"	v
results	pycode/verif_parallel.py	/^                results = pool.map(check_wrfout,iii,)#chunksize=1)$/;"	v
results	pycode/verif_parallel.py	/^                results = pool.map(run_parallel,itr,)#chunksize=1)$/;"	v
results	pycode/verif_parallel.py	/^            results = []$/;"	v
return_all_mrms	pycode/extract_fields.py	/^def return_all_mrms(caseutc,vrbl):$/;"	f
return_latlons	pycode/extract_fields.py	/^    def return_latlons(self):$/;"	m	class:CaseGrid
rmcmd	pycode/generate_namelists.py	/^            rmcmd = 'rm {0}'.format(paths_to_nl[n]['new'])$/;"	v
rmcmd	pycode/old_generate_namelists.py	/^            rmcmd = 'rm {0}'.format(paths_to_nl[n]['new'])$/;"	v
rootdir	pycode/move_around_files.py	/^rootdir = '\/scratch\/john.lawson\/WRF\/VSE_reso\/test\/test_datadir'$/;"	v
rootdir	pycode/run_experiments.py	/^        rootdir = PosixPath('\/scratch\/john.lawson\/WRF\/VSE_reso\/{}\/{}\/'.format(key,timestr))$/;"	v
rootdir	pycode/test_objectid.py	/^rootdir = '\/work\/john.lawson\/VSE_reso\/objectID_1km\/'$/;"	v
round_nearest	pycode/new_verif_parallel.py	/^def round_nearest(x,a,method='floor'):$/;"	f
run_kwargs	pycode/run_experiments.py	/^        run_kwargs = dict($/;"	v
run_parallel	pycode/verif_parallel.py	/^def run_parallel(itr):$/;"	f
rundir	pycode/run_experiments.py	/^        rundir = rootdir$/;"	v
runlen	pycode/generate_namelists.py	/^runlen = 3 # Run length in hours$/;"	v
runsec	pycode/run_experiments.py	/^            runsec = runsec,$/;"	v
runsec	pycode/run_experiments.py	/^        runsec = utils.hr_to_sec(3)$/;"	v
sample	pycode/old_generate_namelists.py	/^    from lhsmdu import sample$/;"	i
save_to_fpath	pycode/extract_fields.py	/^                save_to_fpath = get_extraction_fpaths(vrbl,"mrms_aws_5km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^                save_to_fpath = get_extraction_fpaths(vrbl,"mrms_dz_5km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^            save_to_fpath = get_extraction_fpaths(vrbl,"mrms_aws_1km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^            save_to_fpath = get_extraction_fpaths(vrbl,"mrms_aws_3km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^            save_to_fpath = get_extraction_fpaths(vrbl,"mrms_dz_1km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^            save_to_fpath = get_extraction_fpaths(vrbl,"mrms_dz_3km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^            save_to_fpath = get_extraction_fpaths(vrbl,"stageiv_5km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^        save_to_fpath = get_extraction_fpaths(vrbl,"nexrad_1km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^        save_to_fpath = get_extraction_fpaths(vrbl,"nexrad_3km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^        save_to_fpath = get_extraction_fpaths(vrbl,"stageiv_1km",validutc,caseutc)$/;"	v
save_to_fpath	pycode/extract_fields.py	/^        save_to_fpath = get_extraction_fpaths(vrbl,"stageiv_3km",validutc,caseutc)$/;"	v
scaler	pycode/new_verif_parallel.py	/^    scaler = P['scaler']$/;"	v
scipy	pycode/extract_fields.py	/^import scipy$/;"	i
scipy	pycode/new_verif_parallel.py	/^import scipy$/;"	i
scipy_method	pycode/test_kde.py	/^scipy_method = 0$/;"	v
scoreroot	pycode/extract_fields.py	/^scoreroot = '\/work\/john.lawson\/VSE_reso\/scores\/{}'.format(key_scores)$/;"	v
scores	pycode/ensemble_verification.py	/^scores = ['CRPS',]$/;"	v
scores	pycode/old_verif.py	/^        scores = DetScores.assign_scores_lookup(DetScores,remove_duplicates=True)$/;"	v
seaborn_method	pycode/test_kde.py	/^seaborn_method = 0$/;"	v
seed_lhs	pycode/old_generate_namelists.py	/^        seed_lhs = generate_seeds(1)$/;"	v
seeds_skeb	pycode/old_generate_namelists.py	/^        seeds_skeb = generate_seeds(nens)$/;"	v
seeds_sppt	pycode/old_generate_namelists.py	/^        seeds_sppt = generate_seeds(nens)$/;"	v
size	pycode/new_verif_parallel.py	/^size = 20$/;"	v
skiplist	pycode/old_verif.py	/^skiplist = [$/;"	v
skiplist	pycode/old_verif.py	/^skiplist = []$/;"	v
sleepsec	pycode/run_experiments.py	/^        sleepsec = 3*60*60$/;"	v
smapi	pycode/test_kde.py	/^import statsmodels.api as smapi$/;"	i
sns	pycode/new_verif_parallel.py	/^        import seaborn as sns$/;"	i
sns	pycode/test_kde.py	/^    import seaborn as sns$/;"	i
some_cmd	pycode/extract_fields.py	/^            some_cmd = pool.map(func,genfunc())$/;"	v
sparseFull	pycode/unsparsify.py	/^def sparseFull(a):$/;"	f
spatial_windows	pycode/_old_verif_parallel.py	/^    spatial_windows = N.arange(1,maxsize,5)$/;"	v
spatial_windows	pycode/new_verif_parallel.py	/^    spatial_windows = {$/;"	v
ss	pycode/_test_newruns.py	/^                ss = folder.split('\/')[-1]$/;"	v
st4_lats	pycode/extract_fields.py	/^            st4_lats = ST4.lats$/;"	v
st4_lons	pycode/extract_fields.py	/^            st4_lons = ST4.lons$/;"	v
st4dir	pycode/_alt_verif_parallel.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
st4dir	pycode/_old_verif_parallel.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
st4dir	pycode/extract_fields.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
st4dir	pycode/old_verif.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
st4dir	pycode/test_crps.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
st4dir	pycode/verif_parallel.py	/^st4dir = '\/work\/john.lawson\/STAGEIV_data'$/;"	v
stars	pycode/extract_fields.py	/^stars = "*"*10$/;"	v
stars	pycode/new_verif_parallel.py	/^stars = "*"*10$/;"	v
stars	pycode/verif_parallel.py	/^stars = "*"*10$/;"	v
statsmodels	pycode/test_kde.py	/^import statsmodels.api as smapi$/;"	i
statsmodels_method	pycode/test_kde.py	/^statsmodels_method = 1$/;"	v
subcpus	pycode/_old_verif_parallel.py	/^subcpus = parser.parse_args().subcpus$/;"	v
subcpus	pycode/verif_parallel.py	/^subcpus = parser.parse_args().subcpus$/;"	v
submit_interp	pycode/extract_fields.py	/^def submit_interp(i):$/;"	f
subprocess	pycode/run_experiments.py	/^        import subprocess$/;"	i
sumdir	pycode/test_objectid.py	/^        sumdir = os.path.join(rootdir,'summaryfiles'),$/;"	v
sync_dataframes	pycode/new_verif_parallel.py	/^def sync_dataframes(fmts=None,attr_df=None):$/;"	f
sys	pycode/generate_namelists.py	/^import sys$/;"	i
sys	pycode/old_generate_namelists.py	/^import sys$/;"	i
tempdir_root	pycode/extract_fields.py	/^tempdir_root = '\/work\/john.lawson\/VSE_reso\/pp_temp\/{}'.format(key_pp)$/;"	v
temporal_windows	pycode/_old_verif_parallel.py	/^        temporal_windows = (1,)$/;"	v
temporal_windows	pycode/_old_verif_parallel.py	/^        temporal_windows = (1,3,5)$/;"	v
temporal_windows	pycode/new_verif_parallel.py	/^    temporal_windows = (1,3)$/;"	v
testplot	pycode/test_crps.py	/^def testplot(data,grid,fname,xx,yy,outdir,clvs=N.arange(1,26,1)):$/;"	f
thefile	pycode/_old_verif_parallel.py	/^        thefile = open('\/scratch\/john.lawson\/WRF\/VSE_reso\/ForReal_nco\/failed.txt','w')$/;"	v
thefile	pycode/verif_parallel.py	/^        thefile = open('\/scratch\/john.lawson\/WRF\/VSE_reso\/ForReal_nco\/failed.txt','w')$/;"	v
threshs	pycode/_old_verif_parallel.py	/^        threshs = N.arange(0,100,5)$/;"	v
threshs	pycode/_old_verif_parallel.py	/^        threshs = N.arange(2.5,37.5,2.5)$/;"	v
threshs	pycode/new_verif_parallel.py	/^    threshs = (10,20,30,40,45,50)$/;"	v
thumbnails	pycode/ensemble_verification.py	/^thumbnails = ['REFL_comp',]$/;"	v
time	pycode/generate_namelists.py	/^import time$/;"	i
time	pycode/new_verif_parallel.py	/^import time$/;"	i
time	pycode/old_generate_namelists.py	/^import time$/;"	i
time	pycode/run_experiments.py	/^import time$/;"	i
time_me	pycode/test_crps.py	/^from evac.utils.misc_tools import time_me$/;"	i
timestr	pycode/run_experiments.py	/^        timestr = utils.string_from_time('dir',initutc)$/;"	v
title	pycode/test_verif.py	/^                title = 'Member {:02d}'.format(plot)$/;"	v
toprint	pycode/extract_fields.py	/^        toprint = ["{}\\n".format(c) for c in co]$/;"	v
try_cut_fcst	pycode/verif_parallel.py	/^def try_cut_fcst(casestr,E,vrbl,fcstmin,dom_pp,utc,reduce_z=None,$/;"	f
try_cut_obs	pycode/verif_parallel.py	/^def try_cut_obs(utc,E,obs,vrbl,return_grid=False):$/;"	f
try_load_newgrid	pycode/verif_parallel.py	/^def try_load_newgrid(initstr,E):$/;"	f
try_reproj_fcst	pycode/verif_parallel.py	/^def try_reproj_fcst(initstr,vrbl=None,fcstmin=None,dom_pp=None,E=None,$/;"	f
try_reproj_obs	pycode/verif_parallel.py	/^def try_reproj_obs(dom_pp,obs=None,utc=None,grid=None):$/;"	f
trysave	pycode/verif_parallel.py	/^def trysave(data,fpath):$/;"	f
utc	pycode/_old_verif_parallel.py	/^        utc = get_valid_time(initutc,fcstmin=fcstmin)$/;"	v
utc	pycode/_test_newruns.py	/^        utc = plotutc + datetime.timedelta(seconds=(60*fcstmin))$/;"	v
utils	pycode/_alt_verif_parallel.py	/^import evac.utils as utils$/;"	i
utils	pycode/_old_verif_parallel.py	/^import evac.utils as utils$/;"	i
utils	pycode/_test_newruns.py	/^import evac.utils.utils as utils$/;"	i
utils	pycode/ensemble_verification.py	/^import evac.utils as utils$/;"	i
utils	pycode/extract_fields.py	/^import evac.utils as utils$/;"	i
utils	pycode/figure_caseoutline.py	/^import evac.utils as utils$/;"	i
utils	pycode/new_verif_parallel.py	/^import evac.utils as utils$/;"	i
utils	pycode/old_verif.py	/^import evac.utils as utils$/;"	i
utils	pycode/run_experiments.py	/^import evac.utils.utils as utils$/;"	i
utils	pycode/test_crps.py	/^import evac.utils as utils$/;"	i
utils	pycode/test_kde.py	/^import evac.utils.utils as utils$/;"	i
utils	pycode/test_verif.py	/^import evac.utils as utils$/;"	i
utils	pycode/verif_parallel.py	/^import evac.utils as utils$/;"	i
validutc	pycode/new_verif_parallel.py	/^                validutc = initutc+datetime.timedelta(seconds=60*int(fm))$/;"	v
vrbl	pycode/new_verif_parallel.py	/^    vrbl = "REFL_comp"$/;"	v
vrbl	pycode/test_crps.py	/^vrbl = 'accum_precip'$/;"	v
vrbls	pycode/_alt_verif_parallel.py	/^vrbls = ("W","accum_precip","REFL_comp",)#"UH02","UH05")$/;"	v
wofdir	pycode/run_experiments.py	/^        wofdir = PosixPath('\/work\/wof\/realtime\/{}'.format(casestr))$/;"	v
wrfdir	pycode/run_experiments.py	/^        wrfdir = PosixPath('\/scratch\/john.lawson\/WRF\/VSE_reso\/my_build\/WRFV3\/run')$/;"	v
wrfdir	pycode/test_objectid.py	/^        wrfdir = '\/scratch\/john.lawson\/WRF\/VSE_reso\/ForReal_nco\/2017050501',$/;"	v
wrfout_needed	pycode/run_experiments.py	/^            wrfout_needed = utils.string_from_time('wrfout',initutc,dom=1) + '_{}'.format(memno)$/;"	v
write_row	pycode/new_verif_parallel.py	/^    def write_row(df,n,key,val):$/;"	f
x	pycode/test_kde.py	/^                x = kde.support$/;"	v
xa	pycode/_old_verif_parallel.py	/^        xa = xa2[1:-1,1:-1]$/;"	v
xa2	pycode/_old_verif_parallel.py	/^        xa2 = try_reproj_obs(dom_pp,obs=OBS,utc=utc,grid=NEWGRID)$/;"	v
xa_all	pycode/_old_verif_parallel.py	/^            xa_all = N.zeros([nfcstmin,*xa.shape])$/;"	v
xfs	pycode/_old_verif_parallel.py	/^        xfs = xfs2[:,1:-1,1:-1]$/;"	v
xfs2	pycode/_old_verif_parallel.py	/^        xfs2 = try_reproj_fcst(initstr=initstr,vrbl=vrbl,fcstmin=fcstmin,dom_pp=dom_pp,$/;"	v
xfs_all	pycode/_old_verif_parallel.py	/^            xfs_all = N.zeros([nfcstmin,*xfs.shape])$/;"	v
xmax	pycode/test_kde.py	/^    xmax = math.ceil(fcst1D.max())$/;"	v
xmin	pycode/test_kde.py	/^    xmin = math.floor(fcst1D.min())$/;"	v
xpoints	pycode/test_kde.py	/^    xpoints = N.arange(xmin,xmax+0.05,0.05)$/;"	v
y	pycode/test_kde.py	/^    y = kde.evaluate(xpoints)$/;"	v
